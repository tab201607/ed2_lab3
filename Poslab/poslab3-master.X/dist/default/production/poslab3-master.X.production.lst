

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 24 20:47:07 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Version 2.40
    31                           ; Generated 04/07/2022 GMT
    32                           ; 
    33                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     008F                     	;# 
   110     0090                     	;# 
   111     0091                     	;# 
   112     0092                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0094                     	;# 
   117     0095                     	;# 
   118     0096                     	;# 
   119     0097                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009A                     	;# 
   123     009B                     	;# 
   124     009C                     	;# 
   125     009D                     	;# 
   126     009E                     	;# 
   127     009F                     	;# 
   128     0105                     	;# 
   129     0107                     	;# 
   130     0108                     	;# 
   131     0109                     	;# 
   132     010C                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     010F                     	;# 
   137     0185                     	;# 
   138     0187                     	;# 
   139     0188                     	;# 
   140     0189                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     008F                     	;# 
   188     0090                     	;# 
   189     0091                     	;# 
   190     0092                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0094                     	;# 
   195     0095                     	;# 
   196     0096                     	;# 
   197     0097                     	;# 
   198     0098                     	;# 
   199     0099                     	;# 
   200     009A                     	;# 
   201     009B                     	;# 
   202     009C                     	;# 
   203     009D                     	;# 
   204     009E                     	;# 
   205     009F                     	;# 
   206     0105                     	;# 
   207     0107                     	;# 
   208     0108                     	;# 
   209     0109                     	;# 
   210     010C                     	;# 
   211     010C                     	;# 
   212     010D                     	;# 
   213     010E                     	;# 
   214     010F                     	;# 
   215     0185                     	;# 
   216     0187                     	;# 
   217     0188                     	;# 
   218     0189                     	;# 
   219     018C                     	;# 
   220     018D                     	;# 
   221     0000                     	;# 
   222     0001                     	;# 
   223     0002                     	;# 
   224     0003                     	;# 
   225     0004                     	;# 
   226     0005                     	;# 
   227     0006                     	;# 
   228     0007                     	;# 
   229     0008                     	;# 
   230     0009                     	;# 
   231     000A                     	;# 
   232     000B                     	;# 
   233     000C                     	;# 
   234     000D                     	;# 
   235     000E                     	;# 
   236     000E                     	;# 
   237     000F                     	;# 
   238     0010                     	;# 
   239     0011                     	;# 
   240     0012                     	;# 
   241     0013                     	;# 
   242     0014                     	;# 
   243     0015                     	;# 
   244     0015                     	;# 
   245     0016                     	;# 
   246     0017                     	;# 
   247     0018                     	;# 
   248     0019                     	;# 
   249     001A                     	;# 
   250     001B                     	;# 
   251     001B                     	;# 
   252     001C                     	;# 
   253     001D                     	;# 
   254     001E                     	;# 
   255     001F                     	;# 
   256     0081                     	;# 
   257     0085                     	;# 
   258     0086                     	;# 
   259     0087                     	;# 
   260     0088                     	;# 
   261     0089                     	;# 
   262     008C                     	;# 
   263     008D                     	;# 
   264     008E                     	;# 
   265     008F                     	;# 
   266     0090                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0094                     	;# 
   273     0095                     	;# 
   274     0096                     	;# 
   275     0097                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009A                     	;# 
   279     009B                     	;# 
   280     009C                     	;# 
   281     009D                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     0105                     	;# 
   285     0107                     	;# 
   286     0108                     	;# 
   287     0109                     	;# 
   288     010C                     	;# 
   289     010C                     	;# 
   290     010D                     	;# 
   291     010E                     	;# 
   292     010F                     	;# 
   293     0185                     	;# 
   294     0187                     	;# 
   295     0188                     	;# 
   296     0189                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299     0000                     	;# 
   300     0001                     	;# 
   301     0002                     	;# 
   302     0003                     	;# 
   303     0004                     	;# 
   304     0005                     	;# 
   305     0006                     	;# 
   306     0007                     	;# 
   307     0008                     	;# 
   308     0009                     	;# 
   309     000A                     	;# 
   310     000B                     	;# 
   311     000C                     	;# 
   312     000D                     	;# 
   313     000E                     	;# 
   314     000E                     	;# 
   315     000F                     	;# 
   316     0010                     	;# 
   317     0011                     	;# 
   318     0012                     	;# 
   319     0013                     	;# 
   320     0014                     	;# 
   321     0015                     	;# 
   322     0015                     	;# 
   323     0016                     	;# 
   324     0017                     	;# 
   325     0018                     	;# 
   326     0019                     	;# 
   327     001A                     	;# 
   328     001B                     	;# 
   329     001B                     	;# 
   330     001C                     	;# 
   331     001D                     	;# 
   332     001E                     	;# 
   333     001F                     	;# 
   334     0081                     	;# 
   335     0085                     	;# 
   336     0086                     	;# 
   337     0087                     	;# 
   338     0088                     	;# 
   339     0089                     	;# 
   340     008C                     	;# 
   341     008D                     	;# 
   342     008E                     	;# 
   343     008F                     	;# 
   344     0090                     	;# 
   345     0091                     	;# 
   346     0092                     	;# 
   347     0093                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0094                     	;# 
   351     0095                     	;# 
   352     0096                     	;# 
   353     0097                     	;# 
   354     0098                     	;# 
   355     0099                     	;# 
   356     009A                     	;# 
   357     009B                     	;# 
   358     009C                     	;# 
   359     009D                     	;# 
   360     009E                     	;# 
   361     009F                     	;# 
   362     0105                     	;# 
   363     0107                     	;# 
   364     0108                     	;# 
   365     0109                     	;# 
   366     010C                     	;# 
   367     010C                     	;# 
   368     010D                     	;# 
   369     010E                     	;# 
   370     010F                     	;# 
   371     0185                     	;# 
   372     0187                     	;# 
   373     0188                     	;# 
   374     0189                     	;# 
   375     018C                     	;# 
   376     018D                     	;# 
   377                           
   378                           	psect	strings
   379     0003                     __pstrings:
   380     0003                     stringtab:
   381     0003                     __stringtab:
   382                           
   383                           ;	String table - string pointers are 1 byte each
   384     0003  1BFF               	btfsc	btemp+1,7
   385     0004  280D               	ljmp	stringcode
   386     0005  1383               	bcf	3,7
   387     0006  187F               	btfsc	btemp+1,0
   388     0007  1783               	bsf	3,7
   389     0008  0800               	movf	0,w
   390     0009  0A84               	incf	4,f
   391     000A  1903               	skipnz
   392     000B  0AFF               	incf	btemp+1,f
   393     000C  0008               	return
   394     000D                     stringcode:
   395     000D                     stringdir:
   396     000D  3000               	movlw	high stringdir
   397     000E  008A               	movwf	10
   398     000F  0804               	movf	4,w
   399     0010  0A84               	incf	4,f
   400     0011  0782               	addwf	2,f
   401     0012                     __stringbase:
   402     0012  3400               	retlw	0
   403     0013                     __end_of__stringtab:
   404     0013                     _dpowers:
   405     0013  3401               	retlw	1
   406     0014  3400               	retlw	0
   407     0015  340A               	retlw	10
   408     0016  3400               	retlw	0
   409     0017  3464               	retlw	100
   410     0018  3400               	retlw	0
   411     0019  34E8               	retlw	232
   412     001A  3403               	retlw	3
   413     001B  3410               	retlw	16
   414     001C  3427               	retlw	39
   415     001D                     __end_of_dpowers:
   416     0009                     _PORTE	set	9
   417     0007                     _PORTCbits	set	7
   418     0008                     _PORTD	set	8
   419     0006                     _PORTB	set	6
   420     0005                     _PORTA	set	5
   421     0009                     _PORTEbits	set	9
   422     0013                     _SSPBUF	set	19
   423     0014                     _SSPCON	set	20
   424     0089                     _TRISE	set	137
   425     0088                     _TRISD	set	136
   426     0086                     _TRISB	set	134
   427     0085                     _TRISA	set	133
   428     0087                     _TRISCbits	set	135
   429     0094                     _SSPSTATbits	set	148
   430     0094                     _SSPSTAT	set	148
   431     043B                     _TRISC3	set	1083
   432     043D                     _TRISC5	set	1085
   433     0189                     _ANSELH	set	393
   434     0188                     _ANSEL	set	392
   435     001D                     STR_4:
   436     001D  3420               	retlw	32	;' '
   437     001E  3420               	retlw	32	;' '
   438     001F  3420               	retlw	32	;' '
   439     0020  3420               	retlw	32	;' '
   440     0021  3420               	retlw	32	;' '
   441     0022  3420               	retlw	32	;' '
   442     0023  3420               	retlw	32	;' '
   443     0024  3420               	retlw	32	;' '
   444     0025  3420               	retlw	32	;' '
   445     0026  3420               	retlw	32	;' '
   446     0027  3420               	retlw	32	;' '
   447     0028  3420               	retlw	32	;' '
   448     0029  3420               	retlw	32	;' '
   449     002A  3420               	retlw	32	;' '
   450     002B  3420               	retlw	32	;' '
   451     002C  3420               	retlw	32	;' '
   452     002D  3420               	retlw	32	;' '
   453     002E  3420               	retlw	32	;' '
   454     002F  3420               	retlw	32	;' '
   455     0030  3420               	retlw	32	;' '
   456     0031  3420               	retlw	32	;' '
   457     0032  3420               	retlw	32	;' '
   458     0033  3420               	retlw	32	;' '
   459     0034  3420               	retlw	32	;' '
   460     0035  3420               	retlw	32	;' '
   461     0036  3420               	retlw	32	;' '
   462     0037  3420               	retlw	32	;' '
   463     0038  3420               	retlw	32	;' '
   464     0039  3420               	retlw	32	;' '
   465     003A  3420               	retlw	32	;' '
   466     003B  3420               	retlw	32	;' '
   467     003C  3420               	retlw	32	;' '
   468     003D  3420               	retlw	32	;' '
   469     003E  3400               	retlw	0
   470     003F                     STR_5:
   471     003F  3441               	retlw	65	;'A'
   472     0040  3444               	retlw	68	;'D'
   473     0041  3443               	retlw	67	;'C'
   474     0042  3430               	retlw	48	;'0'
   475     0043  3420               	retlw	32	;' '
   476     0044  3420               	retlw	32	;' '
   477     0045  3420               	retlw	32	;' '
   478     0046  3441               	retlw	65	;'A'
   479     0047  3444               	retlw	68	;'D'
   480     0048  3443               	retlw	67	;'C'
   481     0049  3431               	retlw	49	;'1'
   482     004A  3420               	retlw	32	;' '
   483     004B  3420               	retlw	32	;' '
   484     004C  3443               	retlw	67	;'C'
   485     004D  344E               	retlw	78	;'N'
   486     004E  3454               	retlw	84	;'T'
   487     004F  3400               	retlw	0
   488     0050                     STR_1:
   489     0050  3425               	retlw	37	;'%'
   490     0051  3475               	retlw	117	;'u'
   491     0052  346D               	retlw	109	;'m'
   492     0053  3456               	retlw	86	;'V'
   493     0054  3400               	retlw	0
   494     0055                     STR_3:
   495     0055  3425               	retlw	37	;'%'
   496     0056  3475               	retlw	117	;'u'
   497     0057  3400               	retlw	0
   498     0050                     
   499                           	psect	cinit
   500     07FC                     start_initialization:	
   501                           ; #config settings
   502                           
   503     07FC                     __initialization:
   504     07FC                     end_of_initialization:	
   505                           ;End of C runtime variable initialization code
   506                           
   507     07FC                     __end_of__initialization:
   508     07FC  0183               	clrf	3
   509     07FD  120A  118A  2EA0   	ljmp	_main	;jump to C main() function
   510                           
   511                           	psect	cstackBANK1
   512     00A0                     __pcstackBANK1:
   513     00A0                     main@display2:
   514                           
   515                           ; 50 bytes @ 0x0
   516     00A0                     	ds	50
   517     00D2                     main@display0:
   518                           
   519                           ; 10 bytes @ 0x32
   520     00D2                     	ds	10
   521     00DC                     main@display1:
   522                           
   523                           ; 10 bytes @ 0x3C
   524     00DC                     	ds	10
   525     00E6                     main@adc0:
   526                           
   527                           ; 2 bytes @ 0x46
   528     00E6                     	ds	2
   529     00E8                     main@adc1:
   530                           
   531                           ; 2 bytes @ 0x48
   532     00E8                     	ds	2
   533     00EA                     main@cnt:
   534                           
   535                           ; 1 bytes @ 0x4A
   536     00EA                     	ds	1
   537                           
   538                           	psect	cstackCOMMON
   539     0070                     __pcstackCOMMON:
   540     0070                     ?_setup:
   541     0070                     ?_Lcd_Init:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ?_Lcd_Clear:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ?_spiInit:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_spiReceiveWait:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ??_spiReceiveWait:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_spiWrite:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ??_spiWrite:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_spiRead:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ??_spiRead:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_main:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_Lcd_Port:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ??_Lcd_Port:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_Lcd_Cmd:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_Lcd_Write_Char:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?___wmul:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?___lwdiv:	
   587                           ; 2 bytes @ 0x0
   588                           
   589     0070                     spiInit@sDataSample:	
   590                           ; 2 bytes @ 0x0
   591                           
   592     0070                     spiWrite@dat:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     Lcd_Port@a:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ___wmul@multiplier:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ___lwdiv@divisor:	
   602                           ; 2 bytes @ 0x0
   603                           
   604                           
   605                           ; 2 bytes @ 0x0
   606     0070                     	ds	1
   607     0071                     ??_Lcd_Cmd:
   608     0071                     ??_Lcd_Write_Char:	
   609                           ; 1 bytes @ 0x1
   610                           
   611     0071                     spiInit@sClockIdle:	
   612                           ; 1 bytes @ 0x1
   613                           
   614                           
   615                           ; 1 bytes @ 0x1
   616     0071                     	ds	1
   617     0072                     spiInit@sTransmitEdge:
   618     0072                     Lcd_Write_Char@a:	
   619                           ; 1 bytes @ 0x2
   620                           
   621     0072                     ___wmul@multiplicand:	
   622                           ; 1 bytes @ 0x2
   623                           
   624     0072                     ___lwdiv@dividend:	
   625                           ; 2 bytes @ 0x2
   626                           
   627                           
   628                           ; 2 bytes @ 0x2
   629     0072                     	ds	1
   630     0073                     ?_Lcd_Write_String:
   631     0073                     ??_spiInit:	
   632                           ; 1 bytes @ 0x3
   633                           
   634     0073                     spiInit@sType:	
   635                           ; 1 bytes @ 0x3
   636                           
   637     0073                     Lcd_Cmd@a:	
   638                           ; 1 bytes @ 0x3
   639                           
   640     0073                     Lcd_Write_String@a:	
   641                           ; 1 bytes @ 0x3
   642                           
   643                           
   644                           ; 2 bytes @ 0x3
   645     0073                     	ds	1
   646     0074                     ?_Lcd_Set_Cursor:
   647     0074                     ??_Lcd_Init:	
   648                           ; 1 bytes @ 0x4
   649                           
   650     0074                     ??_Lcd_Clear:	
   651                           ; 1 bytes @ 0x4
   652                           
   653     0074                     ??___wmul:	
   654                           ; 1 bytes @ 0x4
   655                           
   656     0074                     ??___lwdiv:	
   657                           ; 1 bytes @ 0x4
   658                           
   659     0074                     Lcd_Set_Cursor@b:	
   660                           ; 1 bytes @ 0x4
   661                           
   662     0074                     ___wmul@product:	
   663                           ; 1 bytes @ 0x4
   664                           
   665                           
   666                           ; 2 bytes @ 0x4
   667     0074                     	ds	1
   668     0075                     ??_Lcd_Set_Cursor:
   669     0075                     ??_Lcd_Write_String:	
   670                           ; 1 bytes @ 0x5
   671                           
   672     0075                     Lcd_Set_Cursor@a:	
   673                           ; 1 bytes @ 0x5
   674                           
   675     0075                     ___lwdiv@quotient:	
   676                           ; 1 bytes @ 0x5
   677                           
   678                           
   679                           ; 2 bytes @ 0x5
   680     0075                     	ds	1
   681     0076                     Lcd_Set_Cursor@temp:
   682                           
   683                           ; 1 bytes @ 0x6
   684     0076                     	ds	1
   685     0077                     ___lwdiv@counter:
   686                           
   687                           ; 1 bytes @ 0x7
   688     0077                     	ds	1
   689     0078                     ?___lwmod:
   690     0078                     Lcd_Write_String@i:	
   691                           ; 2 bytes @ 0x8
   692                           
   693     0078                     ___lwmod@divisor:	
   694                           ; 2 bytes @ 0x8
   695                           
   696                           
   697                           ; 2 bytes @ 0x8
   698     0078                     	ds	2
   699     007A                     ??_setup:
   700     007A                     ___lwmod@dividend:	
   701                           ; 1 bytes @ 0xA
   702                           
   703                           
   704                           ; 2 bytes @ 0xA
   705     007A                     	ds	2
   706     007C                     ??___lwmod:
   707                           
   708                           ; 1 bytes @ 0xC
   709     007C                     	ds	1
   710     007D                     ___lwmod@counter:
   711                           
   712                           ; 1 bytes @ 0xD
   713     007D                     	ds	1
   714                           
   715                           	psect	cstackBANK0
   716     0020                     __pcstackBANK0:
   717     0020                     ?_sprintf:
   718     0020                     sprintf@f:	
   719                           ; 2 bytes @ 0x0
   720                           
   721                           
   722                           ; 1 bytes @ 0x0
   723     0020                     	ds	3
   724     0023                     ??_sprintf:
   725                           
   726                           ; 1 bytes @ 0x3
   727     0023                     	ds	3
   728     0026                     sprintf@flag:
   729                           
   730                           ; 1 bytes @ 0x6
   731     0026                     	ds	1
   732     0027                     sprintf@ap:
   733                           
   734                           ; 1 bytes @ 0x7
   735     0027                     	ds	1
   736     0028                     sprintf@val:
   737                           
   738                           ; 2 bytes @ 0x8
   739     0028                     	ds	2
   740     002A                     sprintf@prec:
   741                           
   742                           ; 1 bytes @ 0xA
   743     002A                     	ds	1
   744     002B                     sprintf@sp:
   745                           
   746                           ; 1 bytes @ 0xB
   747     002B                     	ds	1
   748     002C                     sprintf@c:
   749                           
   750                           ; 1 bytes @ 0xC
   751     002C                     	ds	1
   752     002D                     ??_main:
   753                           
   754                           ; 1 bytes @ 0xD
   755     002D                     	ds	2
   756                           
   757                           	psect	maintext
   758     06A0                     __pmaintext:	
   759 ;;
   760 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   761 ;;
   762 ;; *************** function _main *****************
   763 ;; Defined at:
   764 ;;		line 49 in file "main_master.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  display2       50    0[BANK1 ] unsigned char [50]
   769 ;;  display1       10   60[BANK1 ] unsigned char [10]
   770 ;;  display0       10   50[BANK1 ] unsigned char [10]
   771 ;;  adc1            2   72[BANK1 ] int 
   772 ;;  adc0            2   70[BANK1 ] int 
   773 ;;  cnt             1   74[BANK1 ] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : B00/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         0       0       0       0       0
   784 ;;      Locals:         0       0      75       0       0
   785 ;;      Temps:          0       2       0       0       0
   786 ;;      Totals:         0       2      75       0       0
   787 ;;Total ram usage:       77 bytes
   788 ;; Hardware stack levels required when called: 4
   789 ;; This function calls:
   790 ;;		_Lcd_Set_Cursor
   791 ;;		_Lcd_Write_String
   792 ;;		___wmul
   793 ;;		_setup
   794 ;;		_spiRead
   795 ;;		_spiWrite
   796 ;;		_sprintf
   797 ;; This function is called by:
   798 ;;		Startup code after reset
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802     06A0                     _main:	
   803                           ;psect for function _main
   804                           
   805     06A0                     l1301:	
   806                           ;incstack = 0
   807                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   808                           
   809                           
   810                           ;main_master.c: 50:     int adc0, adc1;;main_master.c: 51:     char cnt;;main_master.c: 
      +                          53:     setup();
   811     06A0  120A  118A  24FF  120A  118A  	fcall	_setup
   812     06A5                     l1303:
   813                           
   814                           ;main_master.c: 58:        PORTEbits.RE0= 0;
   815     06A5  1283               	bcf	3,5	;RP0=0, select bank0
   816     06A6  1303               	bcf	3,6	;RP1=0, select bank0
   817     06A7  1009               	bcf	9,0	;volatile
   818     06A8                     l1305:
   819                           
   820                           ;main_master.c: 59:        _delay((unsigned long)((10)*(8000000/4000.0)));
   821     06A8  301A               	movlw	26
   822     06A9  1283               	bcf	3,5	;RP0=0, select bank0
   823     06AA  1303               	bcf	3,6	;RP1=0, select bank0
   824     06AB  00AE               	movwf	??_main+1
   825     06AC  30F7               	movlw	247
   826     06AD  00AD               	movwf	??_main
   827     06AE                     u597:
   828     06AE  0BAD               	decfsz	??_main,f
   829     06AF  2EAE               	goto	u597
   830     06B0  0BAE               	decfsz	??_main+1,f
   831     06B1  2EAE               	goto	u597
   832     06B2  2EB3               	nop2
   833     06B3                     l1307:
   834                           
   835                           ;main_master.c: 62:        spiWrite(1);
   836     06B3  3001               	movlw	1
   837     06B4  120A  118A  23CF  120A  118A  	fcall	_spiWrite
   838     06B9                     l1309:
   839                           
   840                           ;main_master.c: 63:        _delay((unsigned long)((100)*(8000000/4000000.0)));
   841     06B9  3041               	movlw	65
   842     06BA  1283               	bcf	3,5	;RP0=0, select bank0
   843     06BB  1303               	bcf	3,6	;RP1=0, select bank0
   844     06BC  00AD               	movwf	??_main
   845     06BD                     u607:
   846     06BD  0BAD               	decfsz	??_main,f
   847     06BE  2EBD               	goto	u607
   848     06BF  2EC0               	nop2
   849     06C0                     l1311:
   850                           
   851                           ;main_master.c: 64:        adc0 = spiRead() * 19;
   852     06C0  120A  118A  23DC  120A  118A  	fcall	_spiRead
   853     06C5  1283               	bcf	3,5	;RP0=0, select bank0
   854     06C6  1303               	bcf	3,6	;RP1=0, select bank0
   855     06C7  00AD               	movwf	??_main
   856     06C8  01AE               	clrf	??_main+1
   857     06C9  082D               	movf	??_main,w
   858     06CA  00F0               	movwf	___wmul@multiplier
   859     06CB  082E               	movf	??_main+1,w
   860     06CC  00F1               	movwf	___wmul@multiplier+1
   861     06CD  3013               	movlw	19
   862     06CE  00F2               	movwf	___wmul@multiplicand
   863     06CF  3000               	movlw	0
   864     06D0  00F3               	movwf	___wmul@multiplicand+1
   865     06D1  120A  118A  245E  120A  118A  	fcall	___wmul
   866     06D6  0871               	movf	?___wmul+1,w
   867     06D7  1683               	bsf	3,5	;RP0=1, select bank1
   868     06D8  1303               	bcf	3,6	;RP1=0, select bank1
   869     06D9  00E7               	movwf	(main@adc0+1)^(0+128)
   870     06DA  0870               	movf	?___wmul,w
   871     06DB  00E6               	movwf	main@adc0^(0+128)
   872     06DC                     l1313:
   873                           
   874                           ;main_master.c: 65:        _delay((unsigned long)((100)*(8000000/4000000.0)));
   875     06DC  3041               	movlw	65
   876     06DD  1283               	bcf	3,5	;RP0=0, select bank0
   877     06DE  1303               	bcf	3,6	;RP1=0, select bank0
   878     06DF  00AD               	movwf	??_main
   879     06E0                     u617:
   880     06E0  0BAD               	decfsz	??_main,f
   881     06E1  2EE0               	goto	u617
   882     06E2  2EE3               	nop2
   883     06E3                     l1315:
   884                           
   885                           ;main_master.c: 66:        spiWrite(0);
   886     06E3  3000               	movlw	0
   887     06E4  120A  118A  23CF  120A  118A  	fcall	_spiWrite
   888     06E9                     l1317:
   889                           
   890                           ;main_master.c: 67:        _delay((unsigned long)((100)*(8000000/4000000.0)));
   891     06E9  3041               	movlw	65
   892     06EA  1283               	bcf	3,5	;RP0=0, select bank0
   893     06EB  1303               	bcf	3,6	;RP1=0, select bank0
   894     06EC  00AD               	movwf	??_main
   895     06ED                     u627:
   896     06ED  0BAD               	decfsz	??_main,f
   897     06EE  2EED               	goto	u627
   898     06EF  2EF0               	nop2
   899     06F0                     l1319:
   900                           
   901                           ;main_master.c: 68:        cnt = spiRead();
   902     06F0  120A  118A  23DC  120A  118A  	fcall	_spiRead
   903     06F5  1683               	bsf	3,5	;RP0=1, select bank1
   904     06F6  1303               	bcf	3,6	;RP1=0, select bank1
   905     06F7  00EA               	movwf	main@cnt^(0+128)
   906     06F8                     l1321:
   907                           
   908                           ;main_master.c: 70:        _delay((unsigned long)((10)*(8000000/4000.0)));
   909     06F8  301A               	movlw	26
   910     06F9  1283               	bcf	3,5	;RP0=0, select bank0
   911     06FA  1303               	bcf	3,6	;RP1=0, select bank0
   912     06FB  00AE               	movwf	??_main+1
   913     06FC  30F7               	movlw	247
   914     06FD  00AD               	movwf	??_main
   915     06FE                     u637:
   916     06FE  0BAD               	decfsz	??_main,f
   917     06FF  2EFE               	goto	u637
   918     0700  0BAE               	decfsz	??_main+1,f
   919     0701  2EFE               	goto	u637
   920     0702  2F03               	nop2
   921     0703                     l1323:
   922                           
   923                           ;main_master.c: 71:        PORTEbits.RE0 = 1;
   924     0703  1283               	bcf	3,5	;RP0=0, select bank0
   925     0704  1303               	bcf	3,6	;RP1=0, select bank0
   926     0705  1409               	bsf	9,0	;volatile
   927     0706                     l1325:
   928                           
   929                           ;main_master.c: 72:        PORTEbits.RE1 = 0;
   930     0706  1089               	bcf	9,1	;volatile
   931     0707                     l1327:
   932                           
   933                           ;main_master.c: 74:        _delay((unsigned long)((10)*(8000000/4000.0)));
   934     0707  301A               	movlw	26
   935     0708  1283               	bcf	3,5	;RP0=0, select bank0
   936     0709  1303               	bcf	3,6	;RP1=0, select bank0
   937     070A  00AE               	movwf	??_main+1
   938     070B  30F7               	movlw	247
   939     070C  00AD               	movwf	??_main
   940     070D                     u647:
   941     070D  0BAD               	decfsz	??_main,f
   942     070E  2F0D               	goto	u647
   943     070F  0BAE               	decfsz	??_main+1,f
   944     0710  2F0D               	goto	u647
   945     0711  2F12               	nop2
   946     0712                     l1329:
   947                           
   948                           ;main_master.c: 77:        spiWrite(0);
   949     0712  3000               	movlw	0
   950     0713  120A  118A  23CF  120A  118A  	fcall	_spiWrite
   951     0718                     l1331:
   952                           
   953                           ;main_master.c: 78:        adc1 = spiRead() * 19;
   954     0718  120A  118A  23DC  120A  118A  	fcall	_spiRead
   955     071D  1283               	bcf	3,5	;RP0=0, select bank0
   956     071E  1303               	bcf	3,6	;RP1=0, select bank0
   957     071F  00AD               	movwf	??_main
   958     0720  01AE               	clrf	??_main+1
   959     0721  082D               	movf	??_main,w
   960     0722  00F0               	movwf	___wmul@multiplier
   961     0723  082E               	movf	??_main+1,w
   962     0724  00F1               	movwf	___wmul@multiplier+1
   963     0725  3013               	movlw	19
   964     0726  00F2               	movwf	___wmul@multiplicand
   965     0727  3000               	movlw	0
   966     0728  00F3               	movwf	___wmul@multiplicand+1
   967     0729  120A  118A  245E  120A  118A  	fcall	___wmul
   968     072E  0871               	movf	?___wmul+1,w
   969     072F  1683               	bsf	3,5	;RP0=1, select bank1
   970     0730  1303               	bcf	3,6	;RP1=0, select bank1
   971     0731  00E9               	movwf	(main@adc1+1)^(0+128)
   972     0732  0870               	movf	?___wmul,w
   973     0733  00E8               	movwf	main@adc1^(0+128)
   974     0734                     l1333:
   975                           
   976                           ;main_master.c: 80:        _delay((unsigned long)((10)*(8000000/4000.0)));
   977     0734  301A               	movlw	26
   978     0735  1283               	bcf	3,5	;RP0=0, select bank0
   979     0736  1303               	bcf	3,6	;RP1=0, select bank0
   980     0737  00AE               	movwf	??_main+1
   981     0738  30F7               	movlw	247
   982     0739  00AD               	movwf	??_main
   983     073A                     u657:
   984     073A  0BAD               	decfsz	??_main,f
   985     073B  2F3A               	goto	u657
   986     073C  0BAE               	decfsz	??_main+1,f
   987     073D  2F3A               	goto	u657
   988     073E  2F3F               	nop2
   989     073F                     l1335:
   990                           
   991                           ;main_master.c: 81:        PORTEbits.RE1 = 1;
   992     073F  1283               	bcf	3,5	;RP0=0, select bank0
   993     0740  1303               	bcf	3,6	;RP1=0, select bank0
   994     0741  1489               	bsf	9,1	;volatile
   995     0742                     l1337:
   996                           
   997                           ;main_master.c: 83:        _delay((unsigned long)((1)*(8000000/4000.0)));
   998     0742  3003               	movlw	3
   999     0743  1283               	bcf	3,5	;RP0=0, select bank0
  1000     0744  1303               	bcf	3,6	;RP1=0, select bank0
  1001     0745  00AE               	movwf	??_main+1
  1002     0746  3097               	movlw	151
  1003     0747  00AD               	movwf	??_main
  1004     0748                     u667:
  1005     0748  0BAD               	decfsz	??_main,f
  1006     0749  2F48               	goto	u667
  1007     074A  0BAE               	decfsz	??_main+1,f
  1008     074B  2F48               	goto	u667
  1009                           
  1010                           ;main_master.c: 87:         char display0[10];;main_master.c: 88:         char display1[
      +                          10];;main_master.c: 89:         char display2[50];;main_master.c: 90:         sprintf(di
      +                          splay0, "%umV", adc0);
  1011     074C  303E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1012     074D  1283               	bcf	3,5	;RP0=0, select bank0
  1013     074E  1303               	bcf	3,6	;RP1=0, select bank0
  1014     074F  00A0               	movwf	sprintf@f
  1015     0750  1683               	bsf	3,5	;RP0=1, select bank1
  1016     0751  1303               	bcf	3,6	;RP1=0, select bank1
  1017     0752  0867               	movf	(main@adc0+1)^(0+128),w
  1018     0753  1283               	bcf	3,5	;RP0=0, select bank0
  1019     0754  1303               	bcf	3,6	;RP1=0, select bank0
  1020     0755  00A2               	movwf	?_sprintf+2
  1021     0756  1683               	bsf	3,5	;RP0=1, select bank1
  1022     0757  1303               	bcf	3,6	;RP1=0, select bank1
  1023     0758  0866               	movf	main@adc0^(0+128),w
  1024     0759  1283               	bcf	3,5	;RP0=0, select bank0
  1025     075A  1303               	bcf	3,6	;RP1=0, select bank0
  1026     075B  00A1               	movwf	?_sprintf+1
  1027     075C  30D2               	movlw	(low (main@display0| 0))& (0+255)
  1028     075D  120A  118A  25DF  120A  118A  	fcall	_sprintf
  1029                           
  1030                           ;main_master.c: 91:         sprintf(display1, "%umV", adc1);
  1031     0762  303E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1032     0763  1283               	bcf	3,5	;RP0=0, select bank0
  1033     0764  1303               	bcf	3,6	;RP1=0, select bank0
  1034     0765  00A0               	movwf	sprintf@f
  1035     0766  1683               	bsf	3,5	;RP0=1, select bank1
  1036     0767  1303               	bcf	3,6	;RP1=0, select bank1
  1037     0768  0869               	movf	(main@adc1+1)^(0+128),w
  1038     0769  1283               	bcf	3,5	;RP0=0, select bank0
  1039     076A  1303               	bcf	3,6	;RP1=0, select bank0
  1040     076B  00A2               	movwf	?_sprintf+2
  1041     076C  1683               	bsf	3,5	;RP0=1, select bank1
  1042     076D  1303               	bcf	3,6	;RP1=0, select bank1
  1043     076E  0868               	movf	main@adc1^(0+128),w
  1044     076F  1283               	bcf	3,5	;RP0=0, select bank0
  1045     0770  1303               	bcf	3,6	;RP1=0, select bank0
  1046     0771  00A1               	movwf	?_sprintf+1
  1047     0772  30DC               	movlw	(low (main@display1| 0))& (0+255)
  1048     0773  120A  118A  25DF  120A  118A  	fcall	_sprintf
  1049                           
  1050                           ;main_master.c: 92:         sprintf(display2, "%u", cnt);
  1051     0778  3043               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1052     0779  1283               	bcf	3,5	;RP0=0, select bank0
  1053     077A  1303               	bcf	3,6	;RP1=0, select bank0
  1054     077B  00A0               	movwf	sprintf@f
  1055     077C  1683               	bsf	3,5	;RP0=1, select bank1
  1056     077D  1303               	bcf	3,6	;RP1=0, select bank1
  1057     077E  086A               	movf	main@cnt^(0+128),w
  1058     077F  1283               	bcf	3,5	;RP0=0, select bank0
  1059     0780  1303               	bcf	3,6	;RP1=0, select bank0
  1060     0781  00AD               	movwf	??_main
  1061     0782  01AE               	clrf	??_main+1
  1062     0783  082D               	movf	??_main,w
  1063     0784  00A1               	movwf	?_sprintf+1
  1064     0785  082E               	movf	??_main+1,w
  1065     0786  00A2               	movwf	?_sprintf+2
  1066     0787  30A0               	movlw	(low (main@display2| 0))& (0+255)
  1067     0788  120A  118A  25DF  120A  118A  	fcall	_sprintf
  1068     078D                     l1339:
  1069                           
  1070                           ;main_master.c: 97:         Lcd_Set_Cursor(2,1);
  1071     078D  01F4               	clrf	Lcd_Set_Cursor@b
  1072     078E  0AF4               	incf	Lcd_Set_Cursor@b,f
  1073     078F  3002               	movlw	2
  1074     0790  120A  118A  243E  120A  118A  	fcall	_Lcd_Set_Cursor
  1075     0795                     l1341:
  1076                           
  1077                           ;main_master.c: 98:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1078     0795  3005               	movlw	5
  1079     0796  1283               	bcf	3,5	;RP0=0, select bank0
  1080     0797  1303               	bcf	3,6	;RP1=0, select bank0
  1081     0798  00AD               	movwf	??_main
  1082     0799                     u677:
  1083     0799  0BAD               	decfsz	??_main,f
  1084     079A  2F99               	goto	u677
  1085     079B  2F9C               	nop2
  1086     079C                     l1343:
  1087                           
  1088                           ;main_master.c: 99:         Lcd_Write_String("                                 ");
  1089     079C  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1090     079D  00F3               	movwf	Lcd_Write_String@a
  1091     079E  3080               	movlw	128
  1092     079F  00F4               	movwf	Lcd_Write_String@a+1
  1093     07A0  120A  118A  24BD  120A  118A  	fcall	_Lcd_Write_String
  1094     07A5                     l1345:
  1095                           
  1096                           ;main_master.c: 100:         Lcd_Set_Cursor(2,1);
  1097     07A5  01F4               	clrf	Lcd_Set_Cursor@b
  1098     07A6  0AF4               	incf	Lcd_Set_Cursor@b,f
  1099     07A7  3002               	movlw	2
  1100     07A8  120A  118A  243E  120A  118A  	fcall	_Lcd_Set_Cursor
  1101                           
  1102                           ;main_master.c: 101:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1103     07AD  3005               	movlw	5
  1104     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1105     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1106     07B0  00AD               	movwf	??_main
  1107     07B1                     u687:
  1108     07B1  0BAD               	decfsz	??_main,f
  1109     07B2  2FB1               	goto	u687
  1110     07B3  2FB4               	nop2
  1111     07B4                     l1347:
  1112                           
  1113                           ;main_master.c: 102:         Lcd_Write_String(display0);
  1114     07B4  30D2               	movlw	(low (main@display0| 0))& (0+255)
  1115     07B5  00F3               	movwf	Lcd_Write_String@a
  1116     07B6  3000               	movlw	0
  1117     07B7  00F4               	movwf	Lcd_Write_String@a+1
  1118     07B8  120A  118A  24BD  120A  118A  	fcall	_Lcd_Write_String
  1119     07BD                     l1349:
  1120                           
  1121                           ;main_master.c: 103:         Lcd_Set_Cursor(2,8);
  1122     07BD  3008               	movlw	8
  1123     07BE  00F4               	movwf	Lcd_Set_Cursor@b
  1124     07BF  3002               	movlw	2
  1125     07C0  120A  118A  243E  120A  118A  	fcall	_Lcd_Set_Cursor
  1126     07C5                     l1351:
  1127                           
  1128                           ;main_master.c: 104:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1129     07C5  3005               	movlw	5
  1130     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1131     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1132     07C8  00AD               	movwf	??_main
  1133     07C9                     u697:
  1134     07C9  0BAD               	decfsz	??_main,f
  1135     07CA  2FC9               	goto	u697
  1136     07CB  2FCC               	nop2
  1137     07CC                     l1353:
  1138                           
  1139                           ;main_master.c: 105:         Lcd_Write_String(display1);
  1140     07CC  30DC               	movlw	(low (main@display1| 0))& (0+255)
  1141     07CD  00F3               	movwf	Lcd_Write_String@a
  1142     07CE  3000               	movlw	0
  1143     07CF  00F4               	movwf	Lcd_Write_String@a+1
  1144     07D0  120A  118A  24BD  120A  118A  	fcall	_Lcd_Write_String
  1145                           
  1146                           ;main_master.c: 106:         Lcd_Set_Cursor (2,14);
  1147     07D5  300E               	movlw	14
  1148     07D6  00F4               	movwf	Lcd_Set_Cursor@b
  1149     07D7  3002               	movlw	2
  1150     07D8  120A  118A  243E  120A  118A  	fcall	_Lcd_Set_Cursor
  1151     07DD                     l1355:
  1152                           
  1153                           ;main_master.c: 107:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1154     07DD  3005               	movlw	5
  1155     07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1156     07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1157     07E0  00AD               	movwf	??_main
  1158     07E1                     u707:
  1159     07E1  0BAD               	decfsz	??_main,f
  1160     07E2  2FE1               	goto	u707
  1161     07E3  2FE4               	nop2
  1162     07E4                     l1357:
  1163                           
  1164                           ;main_master.c: 108:         Lcd_Write_String(display2);
  1165     07E4  30A0               	movlw	(low (main@display2| 0))& (0+255)
  1166     07E5  00F3               	movwf	Lcd_Write_String@a
  1167     07E6  3000               	movlw	0
  1168     07E7  00F4               	movwf	Lcd_Write_String@a+1
  1169     07E8  120A  118A  24BD  120A  118A  	fcall	_Lcd_Write_String
  1170     07ED                     l1359:
  1171                           
  1172                           ;main_master.c: 109:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1173     07ED  301A               	movlw	26
  1174     07EE  1283               	bcf	3,5	;RP0=0, select bank0
  1175     07EF  1303               	bcf	3,6	;RP1=0, select bank0
  1176     07F0  00AE               	movwf	??_main+1
  1177     07F1  30F7               	movlw	247
  1178     07F2  00AD               	movwf	??_main
  1179     07F3                     u717:
  1180     07F3  0BAD               	decfsz	??_main,f
  1181     07F4  2FF3               	goto	u717
  1182     07F5  0BAE               	decfsz	??_main+1,f
  1183     07F6  2FF3               	goto	u717
  1184     07F7  2FF8               	nop2
  1185     07F8  2EA5               	goto	l1303
  1186     07F9  120A  118A  2800   	ljmp	start
  1187     07FC                     __end_of_main:
  1188                           
  1189                           	psect	text1
  1190     05DF                     __ptext1:	
  1191 ;; *************** function _sprintf *****************
  1192 ;; Defined at:
  1193 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  sp              1    wreg     PTR unsigned char 
  1196 ;;		 -> main@display2(50), main@display1(10), main@display0(10), 
  1197 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1198 ;;		 -> STR_3(3), STR_2(5), STR_1(5), 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1201 ;;		 -> main@display2(50), main@display1(10), main@display0(10), 
  1202 ;;  tmpval          4    0        struct .
  1203 ;;  val             2    8[BANK0 ] unsigned int 
  1204 ;;  cp              2    0        PTR const unsigned char 
  1205 ;;  len             2    0        unsigned int 
  1206 ;;  c               1   12[BANK0 ] unsigned char 
  1207 ;;  prec            1   10[BANK0 ] char 
  1208 ;;  ap              1    7[BANK0 ] PTR void [1]
  1209 ;;		 -> ?_sprintf(2), 
  1210 ;;  flag            1    6[BANK0 ] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  2    0[BANK0 ] int 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         0       3       0       0       0
  1221 ;;      Locals:         0       7       0       0       0
  1222 ;;      Temps:          0       3       0       0       0
  1223 ;;      Totals:         0      13       0       0       0
  1224 ;;Total ram usage:       13 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 1
  1227 ;; This function calls:
  1228 ;;		___lwdiv
  1229 ;;		___lwmod
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235     05DF                     _sprintf:	
  1236                           ;psect for function _sprintf
  1237                           
  1238                           
  1239                           ;incstack = 0
  1240                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1241                           ;sprintf@sp stored from wreg
  1242     05DF  1283               	bcf	3,5	;RP0=0, select bank0
  1243     05E0  1303               	bcf	3,6	;RP1=0, select bank0
  1244     05E1  00AB               	movwf	sprintf@sp
  1245     05E2                     l1235:
  1246                           
  1247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1248     05E2  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1249     05E3  00A7               	movwf	sprintf@ap
  1250                           
  1251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1252     05E4  2E8B               	goto	l1277
  1253     05E5                     l1237:
  1254                           
  1255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1256     05E5  3025               	movlw	37
  1257     05E6  062C               	xorwf	sprintf@c,w
  1258     05E7  1903               	btfsc	3,2
  1259     05E8  2DEA               	goto	u501
  1260     05E9  2DEB               	goto	u500
  1261     05EA                     u501:
  1262     05EA  2DF5               	goto	l1243
  1263     05EB                     u500:
  1264     05EB                     l1239:
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1267     05EB  082B               	movf	sprintf@sp,w
  1268     05EC  0084               	movwf	4
  1269     05ED  082C               	movf	sprintf@c,w
  1270     05EE  1383               	bcf	3,7	;select IRP bank0
  1271     05EF  0080               	movwf	0
  1272     05F0                     l1241:
  1273     05F0  3001               	movlw	1
  1274     05F1  00A3               	movwf	??_sprintf
  1275     05F2  0823               	movf	??_sprintf,w
  1276     05F3  07AB               	addwf	sprintf@sp,f
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1279     05F4  2E8B               	goto	l1277
  1280     05F5                     l1243:
  1281                           
  1282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1283     05F5  01A6               	clrf	sprintf@flag
  1284                           
  1285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1286     05F6  2DFC               	goto	l1249
  1287     05F7                     l1245:
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1290     05F7  30C0               	movlw	192
  1291     05F8  00A3               	movwf	??_sprintf
  1292     05F9  0823               	movf	??_sprintf,w
  1293     05FA  04A6               	iorwf	sprintf@flag,f
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1296     05FB  2E16               	goto	l1251
  1297     05FC                     l1249:
  1298     05FC  3001               	movlw	1
  1299     05FD  07A0               	addwf	sprintf@f,f
  1300     05FE  30FF               	movlw	-1
  1301     05FF  0720               	addwf	sprintf@f,w
  1302     0600  0084               	movwf	4
  1303     0601  120A  118A  200D  120A  118A  	fcall	stringdir
  1304     0606  00AC               	movwf	sprintf@c
  1305     0607  00A3               	movwf	??_sprintf
  1306     0608  01A4               	clrf	??_sprintf+1
  1307                           
  1308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1309                           ; Switch size 1, requested type "simple"
  1310                           ; Number of cases is 1, Range of values is 0 to 0
  1311                           ; switch strategies available:
  1312                           ; Name         Instructions Cycles
  1313                           ; simple_byte            4     3 (average)
  1314                           ; direct_byte           11     8 (fixed)
  1315                           ; jumptable            260     6 (fixed)
  1316                           ;	Chosen strategy is simple_byte
  1317     0609  0824               	movf	??_sprintf+1,w
  1318     060A  3A00               	xorlw	0	; case 0
  1319     060B  1903               	skipnz
  1320     060C  2E0E               	goto	l1385
  1321     060D  2E8B               	goto	l1277
  1322     060E                     l1385:
  1323                           
  1324                           ; Switch size 1, requested type "simple"
  1325                           ; Number of cases is 2, Range of values is 0 to 117
  1326                           ; switch strategies available:
  1327                           ; Name         Instructions Cycles
  1328                           ; simple_byte            7     4 (average)
  1329                           ; jumptable            260     6 (fixed)
  1330                           ;	Chosen strategy is simple_byte
  1331     060E  0823               	movf	??_sprintf,w
  1332     060F  3A00               	xorlw	0	; case 0
  1333     0610  1903               	skipnz
  1334     0611  2E9B               	goto	l1279
  1335     0612  3A75               	xorlw	117	; case 117
  1336     0613  1903               	skipnz
  1337     0614  2DF7               	goto	l1245
  1338     0615  2E8B               	goto	l1277
  1339     0616                     l1251:
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1342     0616  0827               	movf	sprintf@ap,w
  1343     0617  0084               	movwf	4
  1344     0618  1383               	bcf	3,7	;select IRP bank0
  1345     0619  0800               	movf	0,w
  1346     061A  00A8               	movwf	sprintf@val
  1347     061B  0A84               	incf	4,f
  1348     061C  0800               	movf	0,w
  1349     061D  00A9               	movwf	sprintf@val+1
  1350     061E                     l1253:
  1351     061E  3002               	movlw	2
  1352     061F  00A3               	movwf	??_sprintf
  1353     0620  0823               	movf	??_sprintf,w
  1354     0621  07A7               	addwf	sprintf@ap,f
  1355     0622                     l1255:
  1356                           
  1357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1358     0622  01AC               	clrf	sprintf@c
  1359     0623  0AAC               	incf	sprintf@c,f
  1360     0624                     l1261:
  1361                           
  1362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1363     0624  082C               	movf	sprintf@c,w
  1364     0625  00A3               	movwf	??_sprintf
  1365     0626  0723               	addwf	??_sprintf,w
  1366     0627  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1367     0628  0084               	movwf	4
  1368     0629  120A  118A  200D  120A  118A  	fcall	stringdir
  1369     062E  00A4               	movwf	??_sprintf+1
  1370     062F  120A  118A  200D  120A  118A  	fcall	stringdir
  1371     0634  00A5               	movwf	??_sprintf+2
  1372     0635  0825               	movf	??_sprintf+2,w
  1373     0636  0229               	subwf	sprintf@val+1,w
  1374     0637  1D03               	skipz
  1375     0638  2E3B               	goto	u515
  1376     0639  0824               	movf	??_sprintf+1,w
  1377     063A  0228               	subwf	sprintf@val,w
  1378     063B                     u515:
  1379     063B  1803               	skipnc
  1380     063C  2E3E               	goto	u511
  1381     063D  2E3F               	goto	u510
  1382     063E                     u511:
  1383     063E  2E40               	goto	l1265
  1384     063F                     u510:
  1385     063F  2E4A               	goto	l1267
  1386     0640                     l1265:
  1387     0640  3001               	movlw	1
  1388     0641  00A3               	movwf	??_sprintf
  1389     0642  0823               	movf	??_sprintf,w
  1390     0643  07AC               	addwf	sprintf@c,f
  1391     0644  3005               	movlw	5
  1392     0645  062C               	xorwf	sprintf@c,w
  1393     0646  1D03               	btfss	3,2
  1394     0647  2E49               	goto	u521
  1395     0648  2E4A               	goto	u520
  1396     0649                     u521:
  1397     0649  2E24               	goto	l1261
  1398     064A                     u520:
  1399     064A                     l1267:
  1400                           
  1401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1402     064A  082C               	movf	sprintf@c,w
  1403     064B  00AA               	movwf	sprintf@prec
  1404                           
  1405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1406     064C  2E82               	goto	l1275
  1407     064D                     l1269:
  1408                           
  1409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1410     064D  300A               	movlw	10
  1411     064E  00F8               	movwf	___lwmod@divisor
  1412     064F  3000               	movlw	0
  1413     0650  00F9               	movwf	___lwmod@divisor+1
  1414     0651  082A               	movf	sprintf@prec,w
  1415     0652  00A3               	movwf	??_sprintf
  1416     0653  0723               	addwf	??_sprintf,w
  1417     0654  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1418     0655  0084               	movwf	4
  1419     0656  120A  118A  200D  120A  118A  	fcall	stringdir
  1420     065B  00F0               	movwf	___lwdiv@divisor
  1421     065C  120A  118A  200D  120A  118A  	fcall	stringdir
  1422     0661  00F1               	movwf	___lwdiv@divisor+1
  1423     0662  0829               	movf	sprintf@val+1,w
  1424     0663  00F3               	movwf	___lwdiv@dividend+1
  1425     0664  0828               	movf	sprintf@val,w
  1426     0665  00F2               	movwf	___lwdiv@dividend
  1427     0666  120A  118A  2543  120A  118A  	fcall	___lwdiv
  1428     066B  0871               	movf	?___lwdiv+1,w
  1429     066C  00FB               	movwf	___lwmod@dividend+1
  1430     066D  0870               	movf	?___lwdiv,w
  1431     066E  00FA               	movwf	___lwmod@dividend
  1432     066F  120A  118A  2483  120A  118A  	fcall	___lwmod
  1433     0674  0878               	movf	?___lwmod,w
  1434     0675  3E30               	addlw	48
  1435     0676  1283               	bcf	3,5	;RP0=0, select bank0
  1436     0677  1303               	bcf	3,6	;RP1=0, select bank0
  1437     0678  00AC               	movwf	sprintf@c
  1438     0679                     l1271:
  1439                           
  1440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1441     0679  082B               	movf	sprintf@sp,w
  1442     067A  0084               	movwf	4
  1443     067B  082C               	movf	sprintf@c,w
  1444     067C  1383               	bcf	3,7	;select IRP bank0
  1445     067D  0080               	movwf	0
  1446     067E                     l1273:
  1447     067E  3001               	movlw	1
  1448     067F  00A3               	movwf	??_sprintf
  1449     0680  0823               	movf	??_sprintf,w
  1450     0681  07AB               	addwf	sprintf@sp,f
  1451     0682                     l1275:
  1452                           
  1453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1454     0682  30FF               	movlw	255
  1455     0683  00A3               	movwf	??_sprintf
  1456     0684  0823               	movf	??_sprintf,w
  1457     0685  07AA               	addwf	sprintf@prec,f
  1458     0686  0A2A               	incf	sprintf@prec,w
  1459     0687  1D03               	btfss	3,2
  1460     0688  2E8A               	goto	u531
  1461     0689  2E8B               	goto	u530
  1462     068A                     u531:
  1463     068A  2E4D               	goto	l1269
  1464     068B                     u530:
  1465     068B                     l1277:
  1466                           
  1467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1468     068B  3001               	movlw	1
  1469     068C  07A0               	addwf	sprintf@f,f
  1470     068D  30FF               	movlw	-1
  1471     068E  0720               	addwf	sprintf@f,w
  1472     068F  0084               	movwf	4
  1473     0690  120A  118A  200D  120A  118A  	fcall	stringdir
  1474     0695  00AC               	movwf	sprintf@c
  1475     0696  082C               	movf	sprintf@c,w
  1476     0697  1D03               	btfss	3,2
  1477     0698  2E9A               	goto	u541
  1478     0699  2E9B               	goto	u540
  1479     069A                     u541:
  1480     069A  2DE5               	goto	l1237
  1481     069B                     u540:
  1482     069B                     l1279:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1485     069B  082B               	movf	sprintf@sp,w
  1486     069C  0084               	movwf	4
  1487     069D  1383               	bcf	3,7	;select IRP bank0
  1488     069E  0180               	clrf	0
  1489     069F                     l237:
  1490     069F  0008               	return
  1491     06A0                     __end_of_sprintf:
  1492                           
  1493                           	psect	text2
  1494     0483                     __ptext2:	
  1495 ;; *************** function ___lwmod *****************
  1496 ;; Defined at:
  1497 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  divisor         2    8[COMMON] unsigned int 
  1500 ;;  dividend        2   10[COMMON] unsigned int 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  counter         1   13[COMMON] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  2    8[COMMON] unsigned int 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         4       0       0       0       0
  1513 ;;      Locals:         1       0       0       0       0
  1514 ;;      Temps:          1       0       0       0       0
  1515 ;;      Totals:         6       0       0       0       0
  1516 ;;Total ram usage:        6 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_sprintf
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525     0483                     ___lwmod:	
  1526                           ;psect for function ___lwmod
  1527                           
  1528     0483                     l1179:	
  1529                           ;incstack = 0
  1530                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1531                           
  1532     0483  0878               	movf	___lwmod@divisor,w
  1533     0484  0479               	iorwf	___lwmod@divisor+1,w
  1534     0485  1903               	btfsc	3,2
  1535     0486  2C88               	goto	u441
  1536     0487  2C89               	goto	u440
  1537     0488                     u441:
  1538     0488  2CB8               	goto	l1197
  1539     0489                     u440:
  1540     0489                     l1181:
  1541     0489  01FD               	clrf	___lwmod@counter
  1542     048A  0AFD               	incf	___lwmod@counter,f
  1543     048B  2C97               	goto	l1187
  1544     048C                     l1183:
  1545     048C  3001               	movlw	1
  1546     048D                     u455:
  1547     048D  1003               	clrc
  1548     048E  0DF8               	rlf	___lwmod@divisor,f
  1549     048F  0DF9               	rlf	___lwmod@divisor+1,f
  1550     0490  3EFF               	addlw	-1
  1551     0491  1D03               	skipz
  1552     0492  2C8D               	goto	u455
  1553     0493                     l1185:
  1554     0493  3001               	movlw	1
  1555     0494  00FC               	movwf	??___lwmod
  1556     0495  087C               	movf	??___lwmod,w
  1557     0496  07FD               	addwf	___lwmod@counter,f
  1558     0497                     l1187:
  1559     0497  1FF9               	btfss	___lwmod@divisor+1,7
  1560     0498  2C9A               	goto	u461
  1561     0499  2C9B               	goto	u460
  1562     049A                     u461:
  1563     049A  2C8C               	goto	l1183
  1564     049B                     u460:
  1565     049B                     l1189:
  1566     049B  0879               	movf	___lwmod@divisor+1,w
  1567     049C  027B               	subwf	___lwmod@dividend+1,w
  1568     049D  1D03               	skipz
  1569     049E  2CA1               	goto	u475
  1570     049F  0878               	movf	___lwmod@divisor,w
  1571     04A0  027A               	subwf	___lwmod@dividend,w
  1572     04A1                     u475:
  1573     04A1  1C03               	skipc
  1574     04A2  2CA4               	goto	u471
  1575     04A3  2CA5               	goto	u470
  1576     04A4                     u471:
  1577     04A4  2CAB               	goto	l1193
  1578     04A5                     u470:
  1579     04A5                     l1191:
  1580     04A5  0878               	movf	___lwmod@divisor,w
  1581     04A6  02FA               	subwf	___lwmod@dividend,f
  1582     04A7  0879               	movf	___lwmod@divisor+1,w
  1583     04A8  1C03               	skipc
  1584     04A9  03FB               	decf	___lwmod@dividend+1,f
  1585     04AA  02FB               	subwf	___lwmod@dividend+1,f
  1586     04AB                     l1193:
  1587     04AB  3001               	movlw	1
  1588     04AC                     u485:
  1589     04AC  1003               	clrc
  1590     04AD  0CF9               	rrf	___lwmod@divisor+1,f
  1591     04AE  0CF8               	rrf	___lwmod@divisor,f
  1592     04AF  3EFF               	addlw	-1
  1593     04B0  1D03               	skipz
  1594     04B1  2CAC               	goto	u485
  1595     04B2                     l1195:
  1596     04B2  3001               	movlw	1
  1597     04B3  02FD               	subwf	___lwmod@counter,f
  1598     04B4  1D03               	btfss	3,2
  1599     04B5  2CB7               	goto	u491
  1600     04B6  2CB8               	goto	u490
  1601     04B7                     u491:
  1602     04B7  2C9B               	goto	l1189
  1603     04B8                     u490:
  1604     04B8                     l1197:
  1605     04B8  087B               	movf	___lwmod@dividend+1,w
  1606     04B9  00F9               	movwf	?___lwmod+1
  1607     04BA  087A               	movf	___lwmod@dividend,w
  1608     04BB  00F8               	movwf	?___lwmod
  1609     04BC                     l523:
  1610     04BC  0008               	return
  1611     04BD                     __end_of___lwmod:
  1612                           
  1613                           	psect	text3
  1614     0543                     __ptext3:	
  1615 ;; *************** function ___lwdiv *****************
  1616 ;; Defined at:
  1617 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  divisor         2    0[COMMON] unsigned int 
  1620 ;;  dividend        2    2[COMMON] unsigned int 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  quotient        2    5[COMMON] unsigned int 
  1623 ;;  counter         1    7[COMMON] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  2    0[COMMON] unsigned int 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1633 ;;      Params:         4       0       0       0       0
  1634 ;;      Locals:         3       0       0       0       0
  1635 ;;      Temps:          1       0       0       0       0
  1636 ;;      Totals:         8       0       0       0       0
  1637 ;;Total ram usage:        8 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_sprintf
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646     0543                     ___lwdiv:	
  1647                           ;psect for function ___lwdiv
  1648                           
  1649     0543                     l1153:	
  1650                           ;incstack = 0
  1651                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1652                           
  1653     0543  01F5               	clrf	___lwdiv@quotient
  1654     0544  01F6               	clrf	___lwdiv@quotient+1
  1655     0545                     l1155:
  1656     0545  0870               	movf	___lwdiv@divisor,w
  1657     0546  0471               	iorwf	___lwdiv@divisor+1,w
  1658     0547  1903               	btfsc	3,2
  1659     0548  2D4A               	goto	u371
  1660     0549  2D4B               	goto	u370
  1661     054A                     u371:
  1662     054A  2D82               	goto	l1175
  1663     054B                     u370:
  1664     054B                     l1157:
  1665     054B  01F7               	clrf	___lwdiv@counter
  1666     054C  0AF7               	incf	___lwdiv@counter,f
  1667     054D  2D59               	goto	l1163
  1668     054E                     l1159:
  1669     054E  3001               	movlw	1
  1670     054F                     u385:
  1671     054F  1003               	clrc
  1672     0550  0DF0               	rlf	___lwdiv@divisor,f
  1673     0551  0DF1               	rlf	___lwdiv@divisor+1,f
  1674     0552  3EFF               	addlw	-1
  1675     0553  1D03               	skipz
  1676     0554  2D4F               	goto	u385
  1677     0555                     l1161:
  1678     0555  3001               	movlw	1
  1679     0556  00F4               	movwf	??___lwdiv
  1680     0557  0874               	movf	??___lwdiv,w
  1681     0558  07F7               	addwf	___lwdiv@counter,f
  1682     0559                     l1163:
  1683     0559  1FF1               	btfss	___lwdiv@divisor+1,7
  1684     055A  2D5C               	goto	u391
  1685     055B  2D5D               	goto	u390
  1686     055C                     u391:
  1687     055C  2D4E               	goto	l1159
  1688     055D                     u390:
  1689     055D                     l1165:
  1690     055D  3001               	movlw	1
  1691     055E                     u405:
  1692     055E  1003               	clrc
  1693     055F  0DF5               	rlf	___lwdiv@quotient,f
  1694     0560  0DF6               	rlf	___lwdiv@quotient+1,f
  1695     0561  3EFF               	addlw	-1
  1696     0562  1D03               	skipz
  1697     0563  2D5E               	goto	u405
  1698     0564  0871               	movf	___lwdiv@divisor+1,w
  1699     0565  0273               	subwf	___lwdiv@dividend+1,w
  1700     0566  1D03               	skipz
  1701     0567  2D6A               	goto	u415
  1702     0568  0870               	movf	___lwdiv@divisor,w
  1703     0569  0272               	subwf	___lwdiv@dividend,w
  1704     056A                     u415:
  1705     056A  1C03               	skipc
  1706     056B  2D6D               	goto	u411
  1707     056C  2D6E               	goto	u410
  1708     056D                     u411:
  1709     056D  2D75               	goto	l1171
  1710     056E                     u410:
  1711     056E                     l1167:
  1712     056E  0870               	movf	___lwdiv@divisor,w
  1713     056F  02F2               	subwf	___lwdiv@dividend,f
  1714     0570  0871               	movf	___lwdiv@divisor+1,w
  1715     0571  1C03               	skipc
  1716     0572  03F3               	decf	___lwdiv@dividend+1,f
  1717     0573  02F3               	subwf	___lwdiv@dividend+1,f
  1718     0574                     l1169:
  1719     0574  1475               	bsf	___lwdiv@quotient,0
  1720     0575                     l1171:
  1721     0575  3001               	movlw	1
  1722     0576                     u425:
  1723     0576  1003               	clrc
  1724     0577  0CF1               	rrf	___lwdiv@divisor+1,f
  1725     0578  0CF0               	rrf	___lwdiv@divisor,f
  1726     0579  3EFF               	addlw	-1
  1727     057A  1D03               	skipz
  1728     057B  2D76               	goto	u425
  1729     057C                     l1173:
  1730     057C  3001               	movlw	1
  1731     057D  02F7               	subwf	___lwdiv@counter,f
  1732     057E  1D03               	btfss	3,2
  1733     057F  2D81               	goto	u431
  1734     0580  2D82               	goto	u430
  1735     0581                     u431:
  1736     0581  2D5D               	goto	l1165
  1737     0582                     u430:
  1738     0582                     l1175:
  1739     0582  0876               	movf	___lwdiv@quotient+1,w
  1740     0583  00F1               	movwf	?___lwdiv+1
  1741     0584  0875               	movf	___lwdiv@quotient,w
  1742     0585  00F0               	movwf	?___lwdiv
  1743     0586                     l513:
  1744     0586  0008               	return
  1745     0587                     __end_of___lwdiv:
  1746                           
  1747                           	psect	text4
  1748     03CF                     __ptext4:	
  1749 ;; *************** function _spiWrite *****************
  1750 ;; Defined at:
  1751 ;;		line 34 in file "SPI.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  dat             1    wreg     unsigned char 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  dat             1    0[COMMON] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       0       0       0       0
  1766 ;;      Locals:         1       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0
  1768 ;;      Totals:         1       0       0       0       0
  1769 ;;Total ram usage:        1 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778     03CF                     _spiWrite:	
  1779                           ;psect for function _spiWrite
  1780                           
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _spiWrite: [wreg]
  1784                           ;spiWrite@dat stored from wreg
  1785     03CF  00F0               	movwf	spiWrite@dat
  1786     03D0                     l1201:
  1787                           
  1788                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1789     03D0  0870               	movf	spiWrite@dat,w
  1790     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1791     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1792     03D3  0093               	movwf	19	;volatile
  1793     03D4                     l26:
  1794     03D4  0008               	return
  1795     03D5                     __end_of_spiWrite:
  1796                           
  1797                           	psect	text5
  1798     03DC                     __ptext5:	
  1799 ;; *************** function _spiRead *****************
  1800 ;; Defined at:
  1801 ;;		line 47 in file "SPI.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      unsigned char 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, pclath, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 1
  1822 ;; This function calls:
  1823 ;;		_spiReceiveWait
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829     03DC                     _spiRead:	
  1830                           ;psect for function _spiRead
  1831                           
  1832     03DC                     l1203:	
  1833                           ;incstack = 0
  1834                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1835                           
  1836                           
  1837                           ;SPI.c: 49:     spiReceiveWait();
  1838     03DC  120A  118A  23D5  120A  118A  	fcall	_spiReceiveWait
  1839     03E1                     l1205:
  1840                           
  1841                           ;SPI.c: 50:     return(SSPBUF);
  1842     03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1843     03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1844     03E3  0813               	movf	19,w	;volatile
  1845     03E4                     l34:
  1846     03E4  0008               	return
  1847     03E5                     __end_of_spiRead:
  1848                           
  1849                           	psect	text6
  1850     03D5                     __ptext6:	
  1851 ;; *************** function _spiReceiveWait *****************
  1852 ;; Defined at:
  1853 ;;		line 29 in file "SPI.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		None
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1867 ;;      Params:         0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0
  1870 ;;      Totals:         0       0       0       0       0
  1871 ;;Total ram usage:        0 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_spiRead
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880     03D5                     _spiReceiveWait:	
  1881                           ;psect for function _spiReceiveWait
  1882                           
  1883     03D5                     l1105:	
  1884                           ;incstack = 0
  1885                           ; Regs used in _spiReceiveWait: []
  1886                           
  1887     03D5                     l20:	
  1888                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1889                           
  1890     03D5  1683               	bsf	3,5	;RP0=1, select bank1
  1891     03D6  1303               	bcf	3,6	;RP1=0, select bank1
  1892     03D7  1C14               	btfss	20,0	;volatile
  1893     03D8  2BDA               	goto	u311
  1894     03D9  2BDB               	goto	u310
  1895     03DA                     u311:
  1896     03DA  2BD5               	goto	l20
  1897     03DB                     u310:
  1898     03DB                     l23:
  1899     03DB  0008               	return
  1900     03DC                     __end_of_spiReceiveWait:
  1901                           
  1902                           	psect	text7
  1903     04FF                     __ptext7:	
  1904 ;; *************** function _setup *****************
  1905 ;; Defined at:
  1906 ;;		line 116 in file "main_master.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1920 ;;      Params:         0       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0
  1923 ;;      Totals:         0       0       0       0       0
  1924 ;;Total ram usage:        0 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 3
  1927 ;; This function calls:
  1928 ;;		_Lcd_Clear
  1929 ;;		_Lcd_Init
  1930 ;;		_Lcd_Set_Cursor
  1931 ;;		_Lcd_Write_String
  1932 ;;		_spiInit
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938     04FF                     _setup:	
  1939                           ;psect for function _setup
  1940                           
  1941     04FF                     l1209:	
  1942                           ;incstack = 0
  1943                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1944                           
  1945                           
  1946                           ;main_master.c: 117:     ANSEL = 0;
  1947     04FF  1683               	bsf	3,5	;RP0=1, select bank3
  1948     0500  1703               	bsf	3,6	;RP1=1, select bank3
  1949     0501  0188               	clrf	8	;volatile
  1950                           
  1951                           ;main_master.c: 118:     ANSELH = 0;
  1952     0502  0189               	clrf	9	;volatile
  1953     0503                     l1211:
  1954                           
  1955                           ;main_master.c: 119:     TRISCbits.TRISC2 = 0;
  1956     0503  1683               	bsf	3,5	;RP0=1, select bank1
  1957     0504  1303               	bcf	3,6	;RP1=0, select bank1
  1958     0505  1107               	bcf	7,2	;volatile
  1959     0506                     l1213:
  1960                           
  1961                           ;main_master.c: 120:     TRISCbits.TRISC6 = 0;
  1962     0506  1307               	bcf	7,6	;volatile
  1963     0507                     l1215:
  1964                           
  1965                           ;main_master.c: 121:     TRISCbits.TRISC7 = 0;
  1966     0507  1387               	bcf	7,7	;volatile
  1967                           
  1968                           ;main_master.c: 123:     TRISA = 0;
  1969     0508  0185               	clrf	5	;volatile
  1970                           
  1971                           ;main_master.c: 124:     PORTA = 0;
  1972     0509  1283               	bcf	3,5	;RP0=0, select bank0
  1973     050A  1303               	bcf	3,6	;RP1=0, select bank0
  1974     050B  0185               	clrf	5	;volatile
  1975                           
  1976                           ;main_master.c: 125:     TRISB = 0;
  1977     050C  1683               	bsf	3,5	;RP0=1, select bank1
  1978     050D  1303               	bcf	3,6	;RP1=0, select bank1
  1979     050E  0186               	clrf	6	;volatile
  1980                           
  1981                           ;main_master.c: 126:     TRISD = 0;
  1982     050F  0188               	clrf	8	;volatile
  1983                           
  1984                           ;main_master.c: 127:     PORTB = 0;
  1985     0510  1283               	bcf	3,5	;RP0=0, select bank0
  1986     0511  1303               	bcf	3,6	;RP1=0, select bank0
  1987     0512  0186               	clrf	6	;volatile
  1988                           
  1989                           ;main_master.c: 128:     PORTD = 0;
  1990     0513  0188               	clrf	8	;volatile
  1991     0514                     l1217:
  1992                           
  1993                           ;main_master.c: 129:     PORTCbits.RC2 = 1;
  1994     0514  1507               	bsf	7,2	;volatile
  1995                           
  1996                           ;main_master.c: 131:     TRISE = 0;
  1997     0515  1683               	bsf	3,5	;RP0=1, select bank1
  1998     0516  1303               	bcf	3,6	;RP1=0, select bank1
  1999     0517  0189               	clrf	9	;volatile
  2000                           
  2001                           ;main_master.c: 132:     PORTE = 0;
  2002     0518  1283               	bcf	3,5	;RP0=0, select bank0
  2003     0519  1303               	bcf	3,6	;RP1=0, select bank0
  2004     051A  0189               	clrf	9	;volatile
  2005     051B                     l1219:
  2006                           
  2007                           ;main_master.c: 134:     PORTEbits.RE0 = 1;
  2008     051B  1409               	bsf	9,0	;volatile
  2009     051C                     l1221:
  2010                           
  2011                           ;main_master.c: 135:     PORTEbits.RE1 = 1;
  2012     051C  1489               	bsf	9,1	;volatile
  2013     051D                     l1223:
  2014                           
  2015                           ;main_master.c: 136:     PORTEbits.RE2 = 1;
  2016     051D  1509               	bsf	9,2	;volatile
  2017     051E                     l1225:
  2018                           
  2019                           ;main_master.c: 138:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  2020     051E  01F0               	clrf	spiInit@sDataSample
  2021     051F  01F1               	clrf	spiInit@sClockIdle
  2022     0520  01F2               	clrf	spiInit@sTransmitEdge
  2023     0521  3020               	movlw	32
  2024     0522  120A  118A  23F2  120A  118A  	fcall	_spiInit
  2025     0527                     l1227:
  2026                           
  2027                           ;main_master.c: 140:     Lcd_Init();
  2028     0527  120A  118A  2587  120A  118A  	fcall	_Lcd_Init
  2029     052C                     l1229:
  2030                           
  2031                           ;main_master.c: 141:     Lcd_Clear();
  2032     052C  120A  118A  23E5  120A  118A  	fcall	_Lcd_Clear
  2033     0531                     l1231:
  2034                           
  2035                           ;main_master.c: 142:     Lcd_Set_Cursor(1,1);
  2036     0531  01F4               	clrf	Lcd_Set_Cursor@b
  2037     0532  0AF4               	incf	Lcd_Set_Cursor@b,f
  2038     0533  3001               	movlw	1
  2039     0534  120A  118A  243E  120A  118A  	fcall	_Lcd_Set_Cursor
  2040     0539                     l1233:
  2041                           
  2042                           ;main_master.c: 143:     Lcd_Write_String("ADC0   ADC1  CNT");
  2043     0539  302D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2044     053A  00F3               	movwf	Lcd_Write_String@a
  2045     053B  3080               	movlw	128
  2046     053C  00F4               	movwf	Lcd_Write_String@a+1
  2047     053D  120A  118A  24BD  120A  118A  	fcall	_Lcd_Write_String
  2048     0542                     l91:
  2049     0542  0008               	return
  2050     0543                     __end_of_setup:
  2051                           
  2052                           	psect	text8
  2053     03F2                     __ptext8:	
  2054 ;; *************** function _spiInit *****************
  2055 ;; Defined at:
  2056 ;;		line 12 in file "SPI.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  sType           1    wreg     enum E1292
  2059 ;;  sDataSample     1    0[COMMON] enum E1300
  2060 ;;  sClockIdle      1    1[COMMON] enum E1304
  2061 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  sType           1    3[COMMON] enum E1292
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2073 ;;      Params:         3       0       0       0       0
  2074 ;;      Locals:         1       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0
  2076 ;;      Totals:         4       0       0       0       0
  2077 ;;Total ram usage:        4 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_setup
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086     03F2                     _spiInit:	
  2087                           ;psect for function _spiInit
  2088                           
  2089                           
  2090                           ;incstack = 0
  2091                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2092                           ;spiInit@sType stored from wreg
  2093     03F2  00F3               	movwf	spiInit@sType
  2094     03F3                     l1095:
  2095                           
  2096                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2097     03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2098     03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2099     03F5  1287               	bcf	7,5	;volatile
  2100                           
  2101                           ;SPI.c: 15:     if(sType & 0b00000100)
  2102     03F6  1D73               	btfss	spiInit@sType,2
  2103     03F7  2BF9               	goto	u301
  2104     03F8  2BFA               	goto	u300
  2105     03F9                     u301:
  2106     03F9  2BFE               	goto	l1101
  2107     03FA                     u300:
  2108     03FA                     l1097:
  2109                           
  2110                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2111     03FA  0872               	movf	spiInit@sTransmitEdge,w
  2112     03FB  0094               	movwf	20	;volatile
  2113     03FC                     l1099:
  2114                           
  2115                           ;SPI.c: 18:         TRISC3 = 1;
  2116     03FC  1587               	bsf	7,3	;volatile
  2117                           
  2118                           ;SPI.c: 19:     }
  2119     03FD  2C02               	goto	l16
  2120     03FE                     l1101:
  2121                           
  2122                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2123     03FE  0870               	movf	spiInit@sDataSample,w
  2124     03FF  0472               	iorwf	spiInit@sTransmitEdge,w
  2125     0400  0094               	movwf	20	;volatile
  2126     0401                     l1103:
  2127                           
  2128                           ;SPI.c: 23:         TRISC3 = 0;
  2129     0401  1187               	bcf	7,3	;volatile
  2130     0402                     l16:	
  2131                           ;SPI.c: 24:     }
  2132                           
  2133                           
  2134                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2135     0402  0873               	movf	spiInit@sType,w
  2136     0403  0471               	iorwf	spiInit@sClockIdle,w
  2137     0404  1283               	bcf	3,5	;RP0=0, select bank0
  2138     0405  1303               	bcf	3,6	;RP1=0, select bank0
  2139     0406  0094               	movwf	20	;volatile
  2140     0407                     l17:
  2141     0407  0008               	return
  2142     0408                     __end_of_spiInit:
  2143                           
  2144                           	psect	text9
  2145     04BD                     __ptext9:	
  2146 ;; *************** function _Lcd_Write_String *****************
  2147 ;; Defined at:
  2148 ;;		line 123 in file "LCD8.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  a               2    3[COMMON] PTR unsigned char 
  2151 ;;		 -> STR_5(17), STR_4(34), main@display2(50), main@display1(10), 
  2152 ;;		 -> main@display0(10), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  i               2    8[COMMON] int 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2164 ;;      Params:         2       0       0       0       0
  2165 ;;      Locals:         2       0       0       0       0
  2166 ;;      Temps:          3       0       0       0       0
  2167 ;;      Totals:         7       0       0       0       0
  2168 ;;Total ram usage:        7 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 2
  2171 ;; This function calls:
  2172 ;;		_Lcd_Write_Char
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;;		_setup
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179     04BD                     _Lcd_Write_String:	
  2180                           ;psect for function _Lcd_Write_String
  2181                           
  2182     04BD                     l1123:	
  2183                           ;incstack = 0
  2184                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2185                           
  2186                           
  2187                           ;LCD8.c: 124:     int i;;LCD8.c: 125:     for (i = 0; a[i] != '\0'; i++)
  2188     04BD  01F8               	clrf	Lcd_Write_String@i
  2189     04BE  01F9               	clrf	Lcd_Write_String@i+1
  2190     04BF  2CE2               	goto	l1129
  2191     04C0                     l1125:
  2192                           
  2193                           ;LCD8.c: 126:         Lcd_Write_Char(a[i]);
  2194     04C0  0878               	movf	Lcd_Write_String@i,w
  2195     04C1  0773               	addwf	Lcd_Write_String@a,w
  2196     04C2  00F6               	movwf	??_Lcd_Write_String+1
  2197     04C3  0874               	movf	Lcd_Write_String@a+1,w
  2198     04C4  00F5               	movwf	??_Lcd_Write_String
  2199     04C5  1803               	skipnc
  2200     04C6  0AF5               	incf	??_Lcd_Write_String,f
  2201     04C7  1FF8               	btfss	Lcd_Write_String@i,7
  2202     04C8  2CCA               	goto	u340
  2203     04C9  03F5               	decf	??_Lcd_Write_String,f
  2204     04CA                     u340:
  2205     04CA  0875               	movf	??_Lcd_Write_String,w
  2206     04CB  00F7               	movwf	??_Lcd_Write_String+2
  2207     04CC  0877               	movf	??_Lcd_Write_String+2,w
  2208     04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2209     04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2210     04CF  00FF               	movwf	btemp+1
  2211     04D0  0876               	movf	??_Lcd_Write_String+1,w
  2212     04D1  0084               	movwf	4
  2213     04D2  120A  118A  2003  120A  118A  	fcall	stringtab
  2214     04D7  120A  118A  2422  120A  118A  	fcall	_Lcd_Write_Char
  2215     04DC                     l1127:
  2216     04DC  3001               	movlw	1
  2217     04DD  07F8               	addwf	Lcd_Write_String@i,f
  2218     04DE  1803               	skipnc
  2219     04DF  0AF9               	incf	Lcd_Write_String@i+1,f
  2220     04E0  3000               	movlw	0
  2221     04E1  07F9               	addwf	Lcd_Write_String@i+1,f
  2222     04E2                     l1129:
  2223     04E2  0878               	movf	Lcd_Write_String@i,w
  2224     04E3  0773               	addwf	Lcd_Write_String@a,w
  2225     04E4  00F6               	movwf	??_Lcd_Write_String+1
  2226     04E5  0874               	movf	Lcd_Write_String@a+1,w
  2227     04E6  00F5               	movwf	??_Lcd_Write_String
  2228     04E7  1803               	skipnc
  2229     04E8  0AF5               	incf	??_Lcd_Write_String,f
  2230     04E9  1FF8               	btfss	Lcd_Write_String@i,7
  2231     04EA  2CEC               	goto	u350
  2232     04EB  03F5               	decf	??_Lcd_Write_String,f
  2233     04EC                     u350:
  2234     04EC  0875               	movf	??_Lcd_Write_String,w
  2235     04ED  00F7               	movwf	??_Lcd_Write_String+2
  2236     04EE  0877               	movf	??_Lcd_Write_String+2,w
  2237     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2238     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  2239     04F1  00FF               	movwf	btemp+1
  2240     04F2  0876               	movf	??_Lcd_Write_String+1,w
  2241     04F3  0084               	movwf	4
  2242     04F4  120A  118A  2003  120A  118A  	fcall	stringtab
  2243     04F9  3A00               	xorlw	0
  2244     04FA  1D03               	skipz
  2245     04FB  2CFD               	goto	u361
  2246     04FC  2CFE               	goto	u360
  2247     04FD                     u361:
  2248     04FD  2CC0               	goto	l1125
  2249     04FE                     u360:
  2250     04FE                     l124:
  2251     04FE  0008               	return
  2252     04FF                     __end_of_Lcd_Write_String:
  2253                           
  2254                           	psect	text10
  2255     0422                     __ptext10:	
  2256 ;; *************** function _Lcd_Write_Char *****************
  2257 ;; Defined at:
  2258 ;;		line 113 in file "LCD8.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  a               1    wreg     unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  a               1    2[COMMON] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0, pclath, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2272 ;;      Params:         0       0       0       0       0
  2273 ;;      Locals:         1       0       0       0       0
  2274 ;;      Temps:          1       0       0       0       0
  2275 ;;      Totals:         2       0       0       0       0
  2276 ;;Total ram usage:        2 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 1
  2279 ;; This function calls:
  2280 ;;		_Lcd_Port
  2281 ;; This function is called by:
  2282 ;;		_Lcd_Write_String
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286     0422                     _Lcd_Write_Char:	
  2287                           ;psect for function _Lcd_Write_Char
  2288                           
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2292                           ;Lcd_Write_Char@a stored from wreg
  2293     0422  00F2               	movwf	Lcd_Write_Char@a
  2294     0423                     l1081:
  2295                           
  2296                           ;LCD8.c: 114:     PORTCbits.RC6 = 1;
  2297     0423  1283               	bcf	3,5	;RP0=0, select bank0
  2298     0424  1303               	bcf	3,6	;RP1=0, select bank0
  2299     0425  1707               	bsf	7,6	;volatile
  2300     0426                     l1083:
  2301                           
  2302                           ;LCD8.c: 115:     Lcd_Port(a);
  2303     0426  0872               	movf	Lcd_Write_Char@a,w
  2304     0427  120A  118A  23C9  120A  118A  	fcall	_Lcd_Port
  2305     042C                     l1085:
  2306                           
  2307                           ;LCD8.c: 116:     PORTCbits.RC7 = 1;
  2308     042C  1283               	bcf	3,5	;RP0=0, select bank0
  2309     042D  1303               	bcf	3,6	;RP1=0, select bank0
  2310     042E  1787               	bsf	7,7	;volatile
  2311     042F                     l1087:
  2312                           
  2313                           ;LCD8.c: 117:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2314     042F  301A               	movlw	26
  2315     0430  00F1               	movwf	??_Lcd_Write_Char
  2316     0431                     u727:
  2317     0431  0BF1               	decfsz	??_Lcd_Write_Char,f
  2318     0432  2C31               	goto	u727
  2319     0433  0000               	nop
  2320     0434                     l1089:
  2321                           
  2322                           ;LCD8.c: 118:     PORTCbits.RC7 = 0;
  2323     0434  1283               	bcf	3,5	;RP0=0, select bank0
  2324     0435  1303               	bcf	3,6	;RP1=0, select bank0
  2325     0436  1387               	bcf	7,7	;volatile
  2326     0437                     l1091:
  2327                           
  2328                           ;LCD8.c: 119:     PORTCbits.RC6 = 0;
  2329     0437  1307               	bcf	7,6	;volatile
  2330     0438                     l1093:
  2331                           
  2332                           ;LCD8.c: 120:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2333     0438  301A               	movlw	26
  2334     0439  00F1               	movwf	??_Lcd_Write_Char
  2335     043A                     u737:
  2336     043A  0BF1               	decfsz	??_Lcd_Write_Char,f
  2337     043B  2C3A               	goto	u737
  2338     043C  0000               	nop
  2339     043D                     l118:
  2340     043D  0008               	return
  2341     043E                     __end_of_Lcd_Write_Char:
  2342                           
  2343                           	psect	text11
  2344     043E                     __ptext11:	
  2345 ;; *************** function _Lcd_Set_Cursor *****************
  2346 ;; Defined at:
  2347 ;;		line 75 in file "LCD8.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  a               1    wreg     unsigned char 
  2350 ;;  b               1    4[COMMON] unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  a               1    5[COMMON] unsigned char 
  2353 ;;  temp            1    6[COMMON] unsigned char 
  2354 ;;  y               1    0        unsigned char 
  2355 ;;  z               1    0        unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0, pclath, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2365 ;;      Params:         1       0       0       0       0
  2366 ;;      Locals:         2       0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0
  2368 ;;      Totals:         3       0       0       0       0
  2369 ;;Total ram usage:        3 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 2
  2372 ;; This function calls:
  2373 ;;		_Lcd_Cmd
  2374 ;; This function is called by:
  2375 ;;		_main
  2376 ;;		_setup
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380     043E                     _Lcd_Set_Cursor:	
  2381                           ;psect for function _Lcd_Set_Cursor
  2382                           
  2383                           
  2384                           ;incstack = 0
  2385                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2386                           ;Lcd_Set_Cursor@a stored from wreg
  2387     043E  00F5               	movwf	Lcd_Set_Cursor@a
  2388     043F                     l1107:
  2389                           
  2390                           ;LCD8.c: 76:     char temp, z, y;;LCD8.c: 77:     if (a == 1) {
  2391     043F  0375               	decf	Lcd_Set_Cursor@a,w
  2392     0440  1D03               	btfss	3,2
  2393     0441  2C43               	goto	u321
  2394     0442  2C44               	goto	u320
  2395     0443                     u321:
  2396     0443  2C4E               	goto	l1115
  2397     0444                     u320:
  2398     0444                     l1109:
  2399                           
  2400                           ;LCD8.c: 78:         temp = 0x80 + b - 1;
  2401     0444  0874               	movf	Lcd_Set_Cursor@b,w
  2402     0445  3E7F               	addlw	127
  2403     0446  00F6               	movwf	Lcd_Set_Cursor@temp
  2404     0447                     l1111:
  2405     0447                     l1113:
  2406                           
  2407                           ;LCD8.c: 81:         Lcd_Cmd(temp);
  2408     0447  0876               	movf	Lcd_Set_Cursor@temp,w
  2409     0448  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2410                           
  2411                           ;LCD8.c: 83:     } else if (a == 2) {
  2412     044D  2C5D               	goto	l112
  2413     044E                     l1115:
  2414     044E  3002               	movlw	2
  2415     044F  0675               	xorwf	Lcd_Set_Cursor@a,w
  2416     0450  1D03               	btfss	3,2
  2417     0451  2C53               	goto	u331
  2418     0452  2C54               	goto	u330
  2419     0453                     u331:
  2420     0453  2C5D               	goto	l112
  2421     0454                     u330:
  2422     0454                     l1117:
  2423                           
  2424                           ;LCD8.c: 84:         temp = 0xC0 + b - 1;
  2425     0454  0874               	movf	Lcd_Set_Cursor@b,w
  2426     0455  3EBF               	addlw	191
  2427     0456  00F6               	movwf	Lcd_Set_Cursor@temp
  2428     0457                     l1119:
  2429     0457                     l1121:
  2430                           
  2431                           ;LCD8.c: 87:         Lcd_Cmd(temp);
  2432     0457  0876               	movf	Lcd_Set_Cursor@temp,w
  2433     0458  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2434     045D                     l112:
  2435     045D  0008               	return
  2436     045E                     __end_of_Lcd_Set_Cursor:
  2437                           
  2438                           	psect	text12
  2439     0587                     __ptext12:	
  2440 ;; *************** function _Lcd_Init *****************
  2441 ;; Defined at:
  2442 ;;		line 94 in file "LCD8.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0, pclath, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2456 ;;      Params:         0       0       0       0       0
  2457 ;;      Locals:         0       0       0       0       0
  2458 ;;      Temps:          3       0       0       0       0
  2459 ;;      Totals:         3       0       0       0       0
  2460 ;;Total ram usage:        3 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 2
  2463 ;; This function calls:
  2464 ;;		_Lcd_Cmd
  2465 ;; This function is called by:
  2466 ;;		_setup
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470     0587                     _Lcd_Init:	
  2471                           ;psect for function _Lcd_Init
  2472                           
  2473     0587                     l1131:	
  2474                           ;incstack = 0
  2475                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2476                           
  2477                           
  2478                           ;LCD8.c: 95:     _delay((unsigned long)((101)*(8000000/4000.0)));
  2479     0587  3002               	movlw	2
  2480     0588  00F6               	movwf	??_Lcd_Init+2
  2481     0589  3007               	movlw	7
  2482     058A  00F5               	movwf	??_Lcd_Init+1
  2483     058B  3053               	movlw	83
  2484     058C  00F4               	movwf	??_Lcd_Init
  2485     058D                     u747:
  2486     058D  0BF4               	decfsz	??_Lcd_Init,f
  2487     058E  2D8D               	goto	u747
  2488     058F  0BF5               	decfsz	??_Lcd_Init+1,f
  2489     0590  2D8D               	goto	u747
  2490     0591  0BF6               	decfsz	??_Lcd_Init+2,f
  2491     0592  2D8D               	goto	u747
  2492     0593                     l1133:
  2493                           
  2494                           ;LCD8.c: 96:     Lcd_Cmd(0x30);
  2495     0593  3030               	movlw	48
  2496     0594  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2497     0599                     l1135:
  2498                           
  2499                           ;LCD8.c: 97:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2500     0599  300D               	movlw	13
  2501     059A  00F5               	movwf	??_Lcd_Init+1
  2502     059B  30FB               	movlw	251
  2503     059C  00F4               	movwf	??_Lcd_Init
  2504     059D                     u757:
  2505     059D  0BF4               	decfsz	??_Lcd_Init,f
  2506     059E  2D9D               	goto	u757
  2507     059F  0BF5               	decfsz	??_Lcd_Init+1,f
  2508     05A0  2D9D               	goto	u757
  2509     05A1  2DA2               	nop2
  2510                           
  2511                           ;LCD8.c: 98:     Lcd_Cmd(0x30);
  2512     05A2  3030               	movlw	48
  2513     05A3  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2514     05A8                     l1137:
  2515                           
  2516                           ;LCD8.c: 99:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2517     05A8  3003               	movlw	3
  2518     05A9  00F5               	movwf	??_Lcd_Init+1
  2519     05AA  3097               	movlw	151
  2520     05AB  00F4               	movwf	??_Lcd_Init
  2521     05AC                     u767:
  2522     05AC  0BF4               	decfsz	??_Lcd_Init,f
  2523     05AD  2DAC               	goto	u767
  2524     05AE  0BF5               	decfsz	??_Lcd_Init+1,f
  2525     05AF  2DAC               	goto	u767
  2526     05B0  2DB1               	nop2
  2527     05B1                     l1139:
  2528                           
  2529                           ;LCD8.c: 100:     Lcd_Cmd(0x30);
  2530     05B1  3030               	movlw	48
  2531     05B2  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2532                           
  2533                           ;LCD8.c: 101:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2534     05B7  3003               	movlw	3
  2535     05B8  00F5               	movwf	??_Lcd_Init+1
  2536     05B9  3097               	movlw	151
  2537     05BA  00F4               	movwf	??_Lcd_Init
  2538     05BB                     u777:
  2539     05BB  0BF4               	decfsz	??_Lcd_Init,f
  2540     05BC  2DBB               	goto	u777
  2541     05BD  0BF5               	decfsz	??_Lcd_Init+1,f
  2542     05BE  2DBB               	goto	u777
  2543     05BF  2DC0               	nop2
  2544     05C0                     l1141:
  2545                           
  2546                           ;LCD8.c: 103:     Lcd_Cmd(0x38);
  2547     05C0  3038               	movlw	56
  2548     05C1  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2549     05C6                     l1143:
  2550                           
  2551                           ;LCD8.c: 104:     Lcd_Cmd(0x08);
  2552     05C6  3008               	movlw	8
  2553     05C7  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2554     05CC                     l1145:
  2555                           
  2556                           ;LCD8.c: 105:     Lcd_Cmd(0x01);
  2557     05CC  3001               	movlw	1
  2558     05CD  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2559     05D2                     l1147:
  2560                           
  2561                           ;LCD8.c: 106:     Lcd_Cmd(0x06);
  2562     05D2  3006               	movlw	6
  2563     05D3  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2564     05D8                     l1149:
  2565                           
  2566                           ;LCD8.c: 107:     Lcd_Cmd(0x0C);
  2567     05D8  300C               	movlw	12
  2568     05D9  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2569     05DE                     l115:
  2570     05DE  0008               	return
  2571     05DF                     __end_of_Lcd_Init:
  2572                           
  2573                           	psect	text13
  2574     03E5                     __ptext13:	
  2575 ;; *************** function _Lcd_Clear *****************
  2576 ;; Defined at:
  2577 ;;		line 70 in file "LCD8.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       0       0       0       0
  2592 ;;      Locals:         0       0       0       0       0
  2593 ;;      Temps:          0       0       0       0       0
  2594 ;;      Totals:         0       0       0       0       0
  2595 ;;Total ram usage:        0 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 2
  2598 ;; This function calls:
  2599 ;;		_Lcd_Cmd
  2600 ;; This function is called by:
  2601 ;;		_setup
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605     03E5                     _Lcd_Clear:	
  2606                           ;psect for function _Lcd_Clear
  2607                           
  2608     03E5                     l1151:	
  2609                           ;incstack = 0
  2610                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2611                           
  2612                           
  2613                           ;LCD8.c: 71:     Lcd_Cmd(0);
  2614     03E5  3000               	movlw	0
  2615     03E6  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2616                           
  2617                           ;LCD8.c: 72:     Lcd_Cmd(1);
  2618     03EB  3001               	movlw	1
  2619     03EC  120A  118A  2408  120A  118A  	fcall	_Lcd_Cmd
  2620     03F1                     l106:
  2621     03F1  0008               	return
  2622     03F2                     __end_of_Lcd_Clear:
  2623                           
  2624                           	psect	text14
  2625     0408                     __ptext14:	
  2626 ;; *************** function _Lcd_Cmd *****************
  2627 ;; Defined at:
  2628 ;;		line 61 in file "LCD8.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  a               1    wreg     unsigned char 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  a               1    3[COMMON] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0, pclath, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2642 ;;      Params:         0       0       0       0       0
  2643 ;;      Locals:         1       0       0       0       0
  2644 ;;      Temps:          2       0       0       0       0
  2645 ;;      Totals:         3       0       0       0       0
  2646 ;;Total ram usage:        3 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 1
  2649 ;; This function calls:
  2650 ;;		_Lcd_Port
  2651 ;; This function is called by:
  2652 ;;		_Lcd_Clear
  2653 ;;		_Lcd_Set_Cursor
  2654 ;;		_Lcd_Init
  2655 ;;		_Lcd_Shift_Right
  2656 ;;		_Lcd_Shift_Left
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660     0408                     _Lcd_Cmd:	
  2661                           ;psect for function _Lcd_Cmd
  2662                           
  2663                           
  2664                           ;incstack = 0
  2665                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2666                           ;Lcd_Cmd@a stored from wreg
  2667     0408  00F3               	movwf	Lcd_Cmd@a
  2668     0409                     l1071:
  2669                           
  2670                           ;LCD8.c: 62:     PORTCbits.RC6 = 0;
  2671     0409  1283               	bcf	3,5	;RP0=0, select bank0
  2672     040A  1303               	bcf	3,6	;RP1=0, select bank0
  2673     040B  1307               	bcf	7,6	;volatile
  2674     040C                     l1073:
  2675                           
  2676                           ;LCD8.c: 63:     Lcd_Port(a);
  2677     040C  0873               	movf	Lcd_Cmd@a,w
  2678     040D  120A  118A  23C9  120A  118A  	fcall	_Lcd_Port
  2679     0412                     l1075:
  2680                           
  2681                           ;LCD8.c: 64:     PORTCbits.RC7 = 1;
  2682     0412  1283               	bcf	3,5	;RP0=0, select bank0
  2683     0413  1303               	bcf	3,6	;RP1=0, select bank0
  2684     0414  1787               	bsf	7,7	;volatile
  2685     0415                     l1077:
  2686                           
  2687                           ;LCD8.c: 65:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2688     0415  300B               	movlw	11
  2689     0416  00F2               	movwf	??_Lcd_Cmd+1
  2690     0417  3062               	movlw	98
  2691     0418  00F1               	movwf	??_Lcd_Cmd
  2692     0419                     u787:
  2693     0419  0BF1               	decfsz	??_Lcd_Cmd,f
  2694     041A  2C19               	goto	u787
  2695     041B  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2696     041C  2C19               	goto	u787
  2697     041D  0000               	nop
  2698     041E                     l1079:
  2699                           
  2700                           ;LCD8.c: 66:     PORTCbits.RC7 = 0;
  2701     041E  1283               	bcf	3,5	;RP0=0, select bank0
  2702     041F  1303               	bcf	3,6	;RP1=0, select bank0
  2703     0420  1387               	bcf	7,7	;volatile
  2704     0421                     l103:
  2705     0421  0008               	return
  2706     0422                     __end_of_Lcd_Cmd:
  2707                           
  2708                           	psect	text15
  2709     03C9                     __ptext15:	
  2710 ;; *************** function _Lcd_Port *****************
  2711 ;; Defined at:
  2712 ;;		line 16 in file "LCD8.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  a               1    wreg     unsigned char 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  a               1    0[COMMON] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2726 ;;      Params:         0       0       0       0       0
  2727 ;;      Locals:         1       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0
  2729 ;;      Totals:         1       0       0       0       0
  2730 ;;Total ram usage:        1 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_Lcd_Cmd
  2736 ;;		_Lcd_Write_Char
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740     03C9                     _Lcd_Port:	
  2741                           ;psect for function _Lcd_Port
  2742                           
  2743                           
  2744                           ;incstack = 0
  2745                           ; Regs used in _Lcd_Port: [wreg]
  2746                           ;Lcd_Port@a stored from wreg
  2747     03C9  00F0               	movwf	Lcd_Port@a
  2748     03CA                     l1069:
  2749                           
  2750                           ;LCD8.c: 17:     PORTD = a;
  2751     03CA  0870               	movf	Lcd_Port@a,w
  2752     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2753     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2754     03CD  0088               	movwf	8	;volatile
  2755     03CE                     l100:
  2756     03CE  0008               	return
  2757     03CF                     __end_of_Lcd_Port:
  2758                           
  2759                           	psect	text16
  2760     045E                     __ptext16:	
  2761 ;; *************** function ___wmul *****************
  2762 ;; Defined at:
  2763 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  multiplier      2    0[COMMON] unsigned int 
  2766 ;;  multiplicand    2    2[COMMON] unsigned int 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  product         2    4[COMMON] unsigned int 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  2    0[COMMON] unsigned int 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2778 ;;      Params:         4       0       0       0       0
  2779 ;;      Locals:         2       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0
  2781 ;;      Totals:         6       0       0       0       0
  2782 ;;Total ram usage:        6 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791     045E                     ___wmul:	
  2792                           ;psect for function ___wmul
  2793                           
  2794     045E                     l1287:	
  2795                           ;incstack = 0
  2796                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2797                           
  2798     045E  01F4               	clrf	___wmul@product
  2799     045F  01F5               	clrf	___wmul@product+1
  2800     0460                     l1289:
  2801     0460  1C70               	btfss	___wmul@multiplier,0
  2802     0461  2C63               	goto	u551
  2803     0462  2C64               	goto	u550
  2804     0463                     u551:
  2805     0463  2C6A               	goto	l241
  2806     0464                     u550:
  2807     0464                     l1291:
  2808     0464  0872               	movf	___wmul@multiplicand,w
  2809     0465  07F4               	addwf	___wmul@product,f
  2810     0466  1803               	skipnc
  2811     0467  0AF5               	incf	___wmul@product+1,f
  2812     0468  0873               	movf	___wmul@multiplicand+1,w
  2813     0469  07F5               	addwf	___wmul@product+1,f
  2814     046A                     l241:
  2815     046A  3001               	movlw	1
  2816     046B                     u565:
  2817     046B  1003               	clrc
  2818     046C  0DF2               	rlf	___wmul@multiplicand,f
  2819     046D  0DF3               	rlf	___wmul@multiplicand+1,f
  2820     046E  3EFF               	addlw	-1
  2821     046F  1D03               	skipz
  2822     0470  2C6B               	goto	u565
  2823     0471                     l1293:
  2824     0471  3001               	movlw	1
  2825     0472                     u575:
  2826     0472  1003               	clrc
  2827     0473  0CF1               	rrf	___wmul@multiplier+1,f
  2828     0474  0CF0               	rrf	___wmul@multiplier,f
  2829     0475  3EFF               	addlw	-1
  2830     0476  1D03               	skipz
  2831     0477  2C72               	goto	u575
  2832     0478                     l1295:
  2833     0478  0870               	movf	___wmul@multiplier,w
  2834     0479  0471               	iorwf	___wmul@multiplier+1,w
  2835     047A  1D03               	btfss	3,2
  2836     047B  2C7D               	goto	u581
  2837     047C  2C7E               	goto	u580
  2838     047D                     u581:
  2839     047D  2C60               	goto	l1289
  2840     047E                     u580:
  2841     047E                     l1297:
  2842     047E  0875               	movf	___wmul@product+1,w
  2843     047F  00F1               	movwf	?___wmul+1
  2844     0480  0874               	movf	___wmul@product,w
  2845     0481  00F0               	movwf	?___wmul
  2846     0482                     l243:
  2847     0482  0008               	return
  2848     0483                     __end_of___wmul:
  2849     007E                     btemp	set	126	;btemp
  2850     007E                     wtemp0	set	126
  2851                           
  2852                           	psect	idloc
  2853                           
  2854                           ;Config register IDLOC0 @ 0x2000
  2855                           ;	unspecified, using default values
  2856     2000                     	org	8192
  2857     2000  3FFF               	dw	16383
  2858                           
  2859                           ;Config register IDLOC1 @ 0x2001
  2860                           ;	unspecified, using default values
  2861     2001                     	org	8193
  2862     2001  3FFF               	dw	16383
  2863                           
  2864                           ;Config register IDLOC2 @ 0x2002
  2865                           ;	unspecified, using default values
  2866     2002                     	org	8194
  2867     2002  3FFF               	dw	16383
  2868                           
  2869                           ;Config register IDLOC3 @ 0x2003
  2870                           ;	unspecified, using default values
  2871     2003                     	org	8195
  2872     2003  3FFF               	dw	16383
  2873                           
  2874                           	psect	config
  2875                           
  2876                           ;Config register CONFIG1 @ 0x2007
  2877                           ;	Oscillator Selection bits
  2878                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2879                           ;	Watchdog Timer Enable bit
  2880                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2881                           ;	Power-up Timer Enable bit
  2882                           ;	PWRTE = OFF, PWRT disabled
  2883                           ;	RE3/MCLR pin function select bit
  2884                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2885                           ;	Code Protection bit
  2886                           ;	CP = OFF, Program memory code protection is disabled
  2887                           ;	Data Code Protection bit
  2888                           ;	CPD = OFF, Data memory code protection is disabled
  2889                           ;	Brown Out Reset Selection bits
  2890                           ;	BOREN = OFF, BOR disabled
  2891                           ;	Internal External Switchover bit
  2892                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2893                           ;	Fail-Safe Clock Monitor Enabled bit
  2894                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2895                           ;	Low Voltage Programming Enable bit
  2896                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2897                           ;	In-Circuit Debugger Mode bit
  2898                           ;	DEBUG = 0x1, unprogrammed default
  2899     2007                     	org	8199
  2900     2007  20D6               	dw	8406
  2901                           
  2902                           ;Config register CONFIG2 @ 0x2008
  2903                           ;	Brown-out Reset Selection bit
  2904                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2905                           ;	Flash Program Memory Self Write Enable bits
  2906                           ;	WRT = OFF, Write protection off
  2907     2008                     	org	8200
  2908     2008  3FFF               	dw	16383

Data Sizes:
    Strings     59
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      15
    BANK1            80     75      75
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[3]), STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> main@display2(BANK1[50]), main@display1(BANK1[10]), main@display0(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 50
		 -> STR_5(CODE[17]), STR_4(CODE[34]), main@display2(BANK1[50]), main@display1(BANK1[10]), 
		 -> main@display0(BANK1[10]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                77    77      0    4758
                                             13 BANK0      2     2      0
                                              0 BANK1     75    75      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             ___wmul
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1612
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     514
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     650
                                              4 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             3     3      0      44
                                              4 COMMON     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___wmul
     _spiRead (ARG)
       _spiReceiveWait
   _setup
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _spiInit
   _spiRead
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F       F       5       18.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     4B      4B       7       93.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 24 20:47:07 2023

                       pc 0002               _SSPSTATbits 0094                        l20 03D5  
                      l23 03DB                        l16 0402                        l17 0407  
                      l34 03E4                        l26 03D4                        l91 0542  
                      fsr 0004       ___wmul@multiplicand 0072                       l100 03CE  
                     l103 0421                       l112 045D                       l106 03F1  
                     l115 05DE                       l124 04FE                       l118 043D  
                     l241 046A                       l243 0482                       l237 069F  
                     l513 0586                       l523 04BC                       u300 03FA  
                     u301 03F9                       u310 03DB                       u311 03DA  
                     u320 0444                       u321 0443                       u330 0454  
                     u410 056E                       u331 0453                       u411 056D  
                     u340 04CA                       u500 05EB                       u405 055E  
                     u501 05EA                       u350 04EC                       u430 0582  
                     u510 063F                       u431 0581                       u415 056A  
                     u511 063E                       u360 04FE                       u440 0489  
                     u520 064A                       u361 04FD                       u425 0576  
                     u441 0488                       u521 0649                       u370 054B  
                     u530 068B                       u371 054A                       u531 068A  
                     u515 063B                       u460 049B                       u540 069B  
                     u461 049A                       u541 069A                       u550 0464  
                     u390 055D                       u470 04A5                       u551 0463  
                     u391 055C                       u471 04A4                       u455 048D  
                     u607 06BD                       u385 054F                       u617 06E0  
                     u490 04B8                       u491 04B7                       u475 04A1  
                     u707 07E1                       u627 06ED                       u580 047E  
                     u581 047D                       u565 046B                       u485 04AC  
                     u717 07F3                       u637 06FE                       u575 0472  
                     u727 0431                       u647 070D                       u737 043A  
                     u657 073A                       u747 058D                       u667 0748  
                     u757 059D                       u677 0799                       u597 06AE  
                     u767 05AC                       u687 07B1                       u777 05BB  
                     u697 07C9                       u787 0419                       fsr0 0004  
                     indf 0000                      l1101 03FE                      l1111 0447  
                    l1103 0401                      l1121 0457                      l1113 0447  
                    l1105 03D5                      l1201 03D0                      l1131 0587  
                    l1115 044E                      l1107 043F                      l1123 04BD  
                    l1211 0503                      l1203 03DC                      l1141 05C0  
                    l1133 0593                      l1117 0454                      l1109 0444  
                    l1125 04C0                      l1221 051C                      l1213 0506  
                    l1205 03E1                      l1301 06A0                      l1071 0409  
                    l1151 03E5                      l1143 05C6                      l1135 0599  
                    l1119 0457                      l1127 04DC                      l1231 0531  
                    l1223 051D                      l1215 0507                      l1311 06C0  
                    l1303 06A5                      l1073 040C                      l1145 05CC  
                    l1137 05A8                      l1081 0423                      l1129 04E2  
                    l1233 0539                      l1225 051E                      l1217 0514  
                    l1209 04FF                      l1161 0555                      l1153 0543  
                    l1241 05F0                      l1321 06F8                      l1313 06DC  
                    l1305 06A8                      l1075 0412                      l1147 05D2  
                    l1139 05B1                      l1091 0437                      l1083 0426  
                    l1227 0527                      l1219 051B                      l1171 0575  
                    l1163 0559                      l1155 0545                      l1251 0616  
                    l1243 05F5                      l1235 05E2                      l1331 0718  
                    l1323 0703                      l1315 06E3                      l1307 06B3  
                    l1069 03CA                      l1077 0415                      l1149 05D8  
                    l1093 0438                      l1085 042C                      l1229 052C  
                    l1173 057C                      l1165 055D                      l1157 054B  
                    l1181 0489                      l1261 0624                      l1253 061E  
                    l1245 05F7                      l1237 05E5                      l1341 0795  
                    l1333 0734                      l1325 0706                      l1317 06E9  
                    l1309 06B9                      l1079 041E                      l1087 042F  
                    l1095 03F3                      l1167 056E                      l1159 054E  
                    l1175 0582                      l1191 04A5                      l1183 048C  
                    l1271 0679                      l1255 0622                      l1239 05EB  
                    l1351 07C5                      l1343 079C                      l1335 073F  
                    l1327 0707                      l1319 06F0                      l1089 0434  
                    l1097 03FA                      l1169 0574                      l1193 04AB  
                    l1185 0493                      l1273 067E                      l1265 0640  
                    l1249 05FC                      l1353 07CC                      l1345 07A5  
                    l1337 0742                      l1329 0712                      l1291 0464  
                    l1099 03FC                      l1195 04B2                      l1187 0497  
                    l1179 0483                      l1275 0682                      l1267 064A  
                    l1355 07DD                      l1347 07B4                      l1339 078D  
                    l1293 0471                      l1189 049B                      l1197 04B8  
                    l1269 064D                      l1277 068B                      l1357 07E4  
                    l1349 07BD                      l1295 0478                      l1287 045E  
                    l1279 069B                      l1359 07ED                      l1297 047E  
                    l1289 0460                      l1385 060E                      STR_1 0050  
                    STR_2 0050                      STR_3 0055                      STR_4 001D  
                    STR_5 003F         ?_Lcd_Write_String 0073                      _main 06A0  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0075  
         __end_of_Lcd_Cmd 0422              main@display0 00D2              main@display1 00DC  
            main@display2 00A0                     ?_main 0070                     _ANSEL 0188  
         __end_of___lwdiv 0587           __end_of___lwmod 04BD                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
                   _TRISE 0089           __end_of_dpowers 001D                     _setup 04FF  
                   pclath 000A           __end_of_spiInit 0408           __end_of_spiRead 03E5  
                   status 0003                     wtemp0 007E           __end_of_sprintf 06A0  
        __end_of_Lcd_Init 05DF          __end_of_Lcd_Port 03CF           __initialization 07FC  
            __end_of_main 07FC                    ??_main 002D                    ?_setup 0070  
                  _ANSELH 0189                 ??_Lcd_Cmd 0071                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
                  ___wmul 045E                 ??___lwdiv 0074                 ??___lwmod 007C  
        __end_of_spiWrite 03D5                 ??_spiInit 0073                 ??_spiRead 0070  
               ??_sprintf 0023           Lcd_Set_Cursor@a 0075           Lcd_Set_Cursor@b 0074  
 __end_of__initialization 07FC         __end_of_Lcd_Clear 03F2            __pcstackCOMMON 0070  
           __end_of_setup 0543            _Lcd_Set_Cursor 043E                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 007A                __pmaintext 06A0  
                 ?___wmul 0070    __end_of_Lcd_Set_Cursor 045E                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                __stringtab 0003  
          _Lcd_Write_Char 0422                   _Lcd_Cmd 0408                 ?_spiWrite 0070  
                 ___lwdiv 0543                   ___lwmod 0483           ?_Lcd_Set_Cursor 0074  
                 __ptext1 05DF                   __ptext2 0483                   __ptext3 0543  
                 __ptext4 03CF                   __ptext5 03DC                   __ptext6 03D5  
                 __ptext7 04FF                   __ptext8 03F2                   __ptext9 04BD  
                 _dpowers 0013                   _spiInit 03F2                   _spiRead 03DC  
                 main@cnt 00EA                   _sprintf 05DF    __end_of_Lcd_Write_Char 043E  
    end_of_initialization 07FC                ??_spiWrite 0070                 Lcd_Port@a 0070  
               _PORTCbits 0007                 _PORTEbits 0009                 _TRISCbits 0087  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0073  
       Lcd_Write_String@i 0078                 _Lcd_Clear 03E5            _spiReceiveWait 03D5  
          __end_of___wmul 0483          _Lcd_Write_String 04BD       start_initialization 07FC  
  __end_of_spiReceiveWait 03DC                ?_Lcd_Clear 0070                  ??___wmul 0074  
         Lcd_Write_Char@a 0072                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                  ?_Lcd_Cmd 0070               sprintf@flag 0026  
             sprintf@prec 002A          ___lwdiv@dividend 0072           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0075                  ?___lwdiv 0070                  ?___lwmod 0078  
               __pstrings 0003                  ?_spiInit 0070                  ?_spiRead 0070  
        ___lwdiv@quotient 0075                  ?_sprintf 0020      spiInit@sTransmitEdge 0072  
          ___wmul@product 0074        spiInit@sDataSample 0070                  Lcd_Cmd@a 0073  
             ??_Lcd_Clear 0074               __stringbase 0012         ___wmul@multiplier 0070  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 0587                  _Lcd_Port 03C9  
__end_of_Lcd_Write_String 04FF        __end_of__stringtab 0013                sprintf@val 0028  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 0422  
                __ptext11 043E                  __ptext12 0587                  __ptext13 03E5  
                __ptext14 0408                  __ptext15 03C9                  __ptext16 045E  
                _spiWrite 03CF              spiInit@sType 0073                  main@adc0 00E6  
                main@adc1 00E8         spiInit@sClockIdle 0071                 sprintf@ap 0027  
               sprintf@sp 002B          ___lwmod@dividend 007A          ??_spiReceiveWait 0070  
               stringcode 000D        Lcd_Set_Cursor@temp 0076                  sprintf@c 002C  
                sprintf@f 0020           ___lwmod@divisor 0078           ___lwmod@counter 007D  
                stringdir 000D                  stringtab 0003  
