

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 23 21:13:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 04/07/2022 GMT
    18                           ; 
    19                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     008F                     	;# 
    96     0090                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0097                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     0105                     	;# 
   115     0107                     	;# 
   116     0108                     	;# 
   117     0109                     	;# 
   118     010C                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     0185                     	;# 
   124     0187                     	;# 
   125     0188                     	;# 
   126     0189                     	;# 
   127     018C                     	;# 
   128     018D                     	;# 
   129     0000                     	;# 
   130     0001                     	;# 
   131     0002                     	;# 
   132     0003                     	;# 
   133     0004                     	;# 
   134     0005                     	;# 
   135     0006                     	;# 
   136     0007                     	;# 
   137     0008                     	;# 
   138     0009                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000D                     	;# 
   143     000E                     	;# 
   144     000E                     	;# 
   145     000F                     	;# 
   146     0010                     	;# 
   147     0011                     	;# 
   148     0012                     	;# 
   149     0013                     	;# 
   150     0014                     	;# 
   151     0015                     	;# 
   152     0015                     	;# 
   153     0016                     	;# 
   154     0017                     	;# 
   155     0018                     	;# 
   156     0019                     	;# 
   157     001A                     	;# 
   158     001B                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001D                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     0081                     	;# 
   165     0085                     	;# 
   166     0086                     	;# 
   167     0087                     	;# 
   168     0088                     	;# 
   169     0089                     	;# 
   170     008C                     	;# 
   171     008D                     	;# 
   172     008E                     	;# 
   173     008F                     	;# 
   174     0090                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0095                     	;# 
   182     0096                     	;# 
   183     0097                     	;# 
   184     0098                     	;# 
   185     0099                     	;# 
   186     009A                     	;# 
   187     009B                     	;# 
   188     009C                     	;# 
   189     009D                     	;# 
   190     009E                     	;# 
   191     009F                     	;# 
   192     0105                     	;# 
   193     0107                     	;# 
   194     0108                     	;# 
   195     0109                     	;# 
   196     010C                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     0185                     	;# 
   202     0187                     	;# 
   203     0188                     	;# 
   204     0189                     	;# 
   205     018C                     	;# 
   206     018D                     	;# 
   207     0000                     	;# 
   208     0001                     	;# 
   209     0002                     	;# 
   210     0003                     	;# 
   211     0004                     	;# 
   212     0005                     	;# 
   213     0006                     	;# 
   214     0007                     	;# 
   215     0008                     	;# 
   216     0009                     	;# 
   217     000A                     	;# 
   218     000B                     	;# 
   219     000C                     	;# 
   220     000D                     	;# 
   221     000E                     	;# 
   222     000E                     	;# 
   223     000F                     	;# 
   224     0010                     	;# 
   225     0011                     	;# 
   226     0012                     	;# 
   227     0013                     	;# 
   228     0014                     	;# 
   229     0015                     	;# 
   230     0015                     	;# 
   231     0016                     	;# 
   232     0017                     	;# 
   233     0018                     	;# 
   234     0019                     	;# 
   235     001A                     	;# 
   236     001B                     	;# 
   237     001B                     	;# 
   238     001C                     	;# 
   239     001D                     	;# 
   240     001E                     	;# 
   241     001F                     	;# 
   242     0081                     	;# 
   243     0085                     	;# 
   244     0086                     	;# 
   245     0087                     	;# 
   246     0088                     	;# 
   247     0089                     	;# 
   248     008C                     	;# 
   249     008D                     	;# 
   250     008E                     	;# 
   251     008F                     	;# 
   252     0090                     	;# 
   253     0091                     	;# 
   254     0092                     	;# 
   255     0093                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0094                     	;# 
   259     0095                     	;# 
   260     0096                     	;# 
   261     0097                     	;# 
   262     0098                     	;# 
   263     0099                     	;# 
   264     009A                     	;# 
   265     009B                     	;# 
   266     009C                     	;# 
   267     009D                     	;# 
   268     009E                     	;# 
   269     009F                     	;# 
   270     0105                     	;# 
   271     0107                     	;# 
   272     0108                     	;# 
   273     0109                     	;# 
   274     010C                     	;# 
   275     010C                     	;# 
   276     010D                     	;# 
   277     010E                     	;# 
   278     010F                     	;# 
   279     0185                     	;# 
   280     0187                     	;# 
   281     0188                     	;# 
   282     0189                     	;# 
   283     018C                     	;# 
   284     018D                     	;# 
   285     0009                     _PORTE	set	9
   286     0007                     _PORTCbits	set	7
   287     0008                     _PORTD	set	8
   288     0006                     _PORTB	set	6
   289     0005                     _PORTA	set	5
   290     0009                     _PORTEbits	set	9
   291     0013                     _SSPBUF	set	19
   292     0014                     _SSPCON	set	20
   293     0089                     _TRISE	set	137
   294     0088                     _TRISD	set	136
   295     0086                     _TRISB	set	134
   296     0085                     _TRISA	set	133
   297     0087                     _TRISCbits	set	135
   298     0094                     _SSPSTATbits	set	148
   299     0094                     _SSPSTAT	set	148
   300     043B                     _TRISC3	set	1083
   301     043D                     _TRISC5	set	1085
   302     0189                     _ANSELH	set	393
   303     0188                     _ANSEL	set	392
   304                           
   305                           	psect	cinit
   306     07FC                     start_initialization:	
   307                           ; #config settings
   308                           
   309     07FC                     __initialization:
   310     07FC                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313     07FC                     __end_of__initialization:
   314     07FC  0183               	clrf	3
   315     07FD  120A  118A  2F85   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	cstackCOMMON
   318     0070                     __pcstackCOMMON:
   319     0070                     ?_setup:
   320     0070                     ?_spiInit:	
   321                           ; 1 bytes @ 0x0
   322                           
   323     0070                     ?_spiReceiveWait:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ??_spiReceiveWait:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_spiWrite:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ??_spiWrite:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ?_spiRead:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ??_spiRead:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0070                     spiInit@sDataSample:	
   345                           ; 1 bytes @ 0x0
   346                           
   347     0070                     spiWrite@dat:	
   348                           ; 1 bytes @ 0x0
   349                           
   350                           
   351                           ; 1 bytes @ 0x0
   352     0070                     	ds	1
   353     0071                     spiInit@sClockIdle:
   354                           
   355                           ; 1 bytes @ 0x1
   356     0071                     	ds	1
   357     0072                     spiInit@sTransmitEdge:
   358                           
   359                           ; 1 bytes @ 0x2
   360     0072                     	ds	1
   361     0073                     ??_spiInit:
   362     0073                     spiInit@sType:	
   363                           ; 1 bytes @ 0x3
   364                           
   365                           
   366                           ; 1 bytes @ 0x3
   367     0073                     	ds	1
   368     0074                     ??_setup:
   369     0074                     ??_main:	
   370                           ; 1 bytes @ 0x4
   371                           
   372                           
   373                           ; 1 bytes @ 0x4
   374     0074                     	ds	2
   375                           
   376                           	psect	maintext
   377     0785                     __pmaintext:	
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 45 in file "main_master.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  adc2            1    0        unsigned char 
   388 ;;  adc1            1    0        unsigned char 
   389 ;;  adc0            1    0        unsigned char 
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, pclath, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : B00/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          2       0       0       0       0
   402 ;;      Totals:         2       0       0       0       0
   403 ;;Total ram usage:        2 bytes
   404 ;; Hardware stack levels required when called: 2
   405 ;; This function calls:
   406 ;;		_setup
   407 ;;		_spiRead
   408 ;;		_spiWrite
   409 ;; This function is called by:
   410 ;;		Startup code after reset
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414     0785                     _main:	
   415                           ;psect for function _main
   416                           
   417     0785                     l775:	
   418                           ;incstack = 0
   419                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   420                           
   421                           
   422                           ;main_master.c: 46:     char adc0, adc1, adc2;;main_master.c: 48:     setup();
   423     0785  120A  118A  275E  120A  118A  	fcall	_setup
   424     078A                     l777:
   425                           
   426                           ;main_master.c: 53:        PORTEbits.RE0= 0;
   427     078A  1283               	bcf	3,5	;RP0=0, select bank0
   428     078B  1303               	bcf	3,6	;RP1=0, select bank0
   429     078C  1009               	bcf	9,0	;volatile
   430     078D                     l779:
   431                           
   432                           ;main_master.c: 54:        _delay((unsigned long)((10)*(8000000/4000.0)));
   433     078D  301A               	movlw	26
   434     078E  00F5               	movwf	??_main+1
   435     078F  30F8               	movlw	248
   436     0790  00F4               	movwf	??_main
   437     0791                     u47:
   438     0791  0BF4               	decfsz	??_main,f
   439     0792  2F91               	goto	u47
   440     0793  0BF5               	decfsz	??_main+1,f
   441     0794  2F91               	goto	u47
   442     0795  0000               	nop
   443     0796                     l781:
   444                           
   445                           ;main_master.c: 56:        spiWrite(0x00);
   446     0796  3000               	movlw	0
   447     0797  120A  118A  2732  120A  118A  	fcall	_spiWrite
   448     079C                     l783:
   449                           
   450                           ;main_master.c: 57:        PORTA = spiRead();
   451     079C  120A  118A  273F  120A  118A  	fcall	_spiRead
   452     07A1  1283               	bcf	3,5	;RP0=0, select bank0
   453     07A2  1303               	bcf	3,6	;RP1=0, select bank0
   454     07A3  0085               	movwf	5	;volatile
   455     07A4                     l785:
   456                           
   457                           ;main_master.c: 59:        _delay((unsigned long)((10)*(8000000/4000.0)));
   458     07A4  301A               	movlw	26
   459     07A5  00F5               	movwf	??_main+1
   460     07A6  30F8               	movlw	248
   461     07A7  00F4               	movwf	??_main
   462     07A8                     u57:
   463     07A8  0BF4               	decfsz	??_main,f
   464     07A9  2FA8               	goto	u57
   465     07AA  0BF5               	decfsz	??_main+1,f
   466     07AB  2FA8               	goto	u57
   467     07AC  0000               	nop
   468     07AD                     l787:
   469                           
   470                           ;main_master.c: 60:        PORTEbits.RE0 = 1;
   471     07AD  1283               	bcf	3,5	;RP0=0, select bank0
   472     07AE  1303               	bcf	3,6	;RP1=0, select bank0
   473     07AF  1409               	bsf	9,0	;volatile
   474     07B0                     l789:
   475                           
   476                           ;main_master.c: 61:        PORTEbits.RE1 = 0;
   477     07B0  1089               	bcf	9,1	;volatile
   478     07B1                     l791:
   479                           
   480                           ;main_master.c: 63:        _delay((unsigned long)((10)*(8000000/4000.0)));
   481     07B1  301A               	movlw	26
   482     07B2  00F5               	movwf	??_main+1
   483     07B3  30F8               	movlw	248
   484     07B4  00F4               	movwf	??_main
   485     07B5                     u67:
   486     07B5  0BF4               	decfsz	??_main,f
   487     07B6  2FB5               	goto	u67
   488     07B7  0BF5               	decfsz	??_main+1,f
   489     07B8  2FB5               	goto	u67
   490     07B9  0000               	nop
   491     07BA                     l793:
   492                           
   493                           ;main_master.c: 65:        spiWrite(0);
   494     07BA  3000               	movlw	0
   495     07BB  120A  118A  2732  120A  118A  	fcall	_spiWrite
   496     07C0                     l795:
   497                           
   498                           ;main_master.c: 66:        PORTB = spiRead();
   499     07C0  120A  118A  273F  120A  118A  	fcall	_spiRead
   500     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   501     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   502     07C7  0086               	movwf	6	;volatile
   503     07C8                     l797:
   504                           
   505                           ;main_master.c: 68:        _delay((unsigned long)((10)*(8000000/4000.0)));
   506     07C8  301A               	movlw	26
   507     07C9  00F5               	movwf	??_main+1
   508     07CA  30F8               	movlw	248
   509     07CB  00F4               	movwf	??_main
   510     07CC                     u77:
   511     07CC  0BF4               	decfsz	??_main,f
   512     07CD  2FCC               	goto	u77
   513     07CE  0BF5               	decfsz	??_main+1,f
   514     07CF  2FCC               	goto	u77
   515     07D0  0000               	nop
   516     07D1                     l799:
   517                           
   518                           ;main_master.c: 69:        PORTEbits.RE1 = 1;
   519     07D1  1283               	bcf	3,5	;RP0=0, select bank0
   520     07D2  1303               	bcf	3,6	;RP1=0, select bank0
   521     07D3  1489               	bsf	9,1	;volatile
   522     07D4                     l801:
   523                           
   524                           ;main_master.c: 70:        PORTEbits.RE2 = 0;
   525     07D4  1109               	bcf	9,2	;volatile
   526     07D5                     l803:
   527                           
   528                           ;main_master.c: 72:        _delay((unsigned long)((10)*(8000000/4000.0)));
   529     07D5  301A               	movlw	26
   530     07D6  00F5               	movwf	??_main+1
   531     07D7  30F8               	movlw	248
   532     07D8  00F4               	movwf	??_main
   533     07D9                     u87:
   534     07D9  0BF4               	decfsz	??_main,f
   535     07DA  2FD9               	goto	u87
   536     07DB  0BF5               	decfsz	??_main+1,f
   537     07DC  2FD9               	goto	u87
   538     07DD  0000               	nop
   539     07DE                     l805:
   540                           
   541                           ;main_master.c: 74:        spiWrite(0);
   542     07DE  3000               	movlw	0
   543     07DF  120A  118A  2732  120A  118A  	fcall	_spiWrite
   544     07E4                     l807:
   545                           
   546                           ;main_master.c: 75:        PORTD = spiRead();
   547     07E4  120A  118A  273F  120A  118A  	fcall	_spiRead
   548     07E9  1283               	bcf	3,5	;RP0=0, select bank0
   549     07EA  1303               	bcf	3,6	;RP1=0, select bank0
   550     07EB  0088               	movwf	8	;volatile
   551     07EC                     l809:
   552                           
   553                           ;main_master.c: 77:        _delay((unsigned long)((10)*(8000000/4000.0)));
   554     07EC  301A               	movlw	26
   555     07ED  00F5               	movwf	??_main+1
   556     07EE  30F8               	movlw	248
   557     07EF  00F4               	movwf	??_main
   558     07F0                     u97:
   559     07F0  0BF4               	decfsz	??_main,f
   560     07F1  2FF0               	goto	u97
   561     07F2  0BF5               	decfsz	??_main+1,f
   562     07F3  2FF0               	goto	u97
   563     07F4  0000               	nop
   564     07F5                     l811:
   565                           
   566                           ;main_master.c: 78:        PORTEbits.RE2 = 1;
   567     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   568     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   569     07F7  1509               	bsf	9,2	;volatile
   570     07F8  2F8A               	goto	l777
   571     07F9  120A  118A  2800   	ljmp	start
   572     07FC                     __end_of_main:
   573                           
   574                           	psect	text1
   575     0732                     __ptext1:	
   576 ;; *************** function _spiWrite *****************
   577 ;; Defined at:
   578 ;;		line 34 in file "SPI.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;  dat             1    wreg     unsigned char 
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  dat             1    0[COMMON] unsigned char 
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         0       0       0       0       0
   593 ;;      Locals:         1       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0
   595 ;;      Totals:         1       0       0       0       0
   596 ;;Total ram usage:        1 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605     0732                     _spiWrite:	
   606                           ;psect for function _spiWrite
   607                           
   608                           
   609                           ;incstack = 0
   610                           ; Regs used in _spiWrite: [wreg]
   611                           ;spiWrite@dat stored from wreg
   612     0732  00F0               	movwf	spiWrite@dat
   613     0733                     l685:
   614                           
   615                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   616     0733  0870               	movf	spiWrite@dat,w
   617     0734  1283               	bcf	3,5	;RP0=0, select bank0
   618     0735  1303               	bcf	3,6	;RP1=0, select bank0
   619     0736  0093               	movwf	19	;volatile
   620     0737                     l26:
   621     0737  0008               	return
   622     0738                     __end_of_spiWrite:
   623                           
   624                           	psect	text2
   625     073F                     __ptext2:	
   626 ;; *************** function _spiRead *****************
   627 ;; Defined at:
   628 ;;		line 47 in file "SPI.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      unsigned char 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, pclath, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; Hardware stack levels required when called: 1
   649 ;; This function calls:
   650 ;;		_spiReceiveWait
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656     073F                     _spiRead:	
   657                           ;psect for function _spiRead
   658                           
   659     073F                     l687:	
   660                           ;incstack = 0
   661                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   662                           
   663                           
   664                           ;SPI.c: 49:     spiReceiveWait();
   665     073F  120A  118A  2738  120A  118A  	fcall	_spiReceiveWait
   666     0744                     l689:
   667                           
   668                           ;SPI.c: 50:     return(SSPBUF);
   669     0744  1283               	bcf	3,5	;RP0=0, select bank0
   670     0745  1303               	bcf	3,6	;RP1=0, select bank0
   671     0746  0813               	movf	19,w	;volatile
   672     0747                     l34:
   673     0747  0008               	return
   674     0748                     __end_of_spiRead:
   675                           
   676                           	psect	text3
   677     0738                     __ptext3:	
   678 ;; *************** function _spiReceiveWait *****************
   679 ;; Defined at:
   680 ;;		line 29 in file "SPI.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		None
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0
   697 ;;      Totals:         0       0       0       0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_spiRead
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707     0738                     _spiReceiveWait:	
   708                           ;psect for function _spiReceiveWait
   709                           
   710     0738                     l683:	
   711                           ;incstack = 0
   712                           ; Regs used in _spiReceiveWait: []
   713                           
   714     0738                     l20:	
   715                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   716                           
   717     0738  1683               	bsf	3,5	;RP0=1, select bank1
   718     0739  1303               	bcf	3,6	;RP1=0, select bank1
   719     073A  1C14               	btfss	20,0	;volatile
   720     073B  2F3D               	goto	u21
   721     073C  2F3E               	goto	u20
   722     073D                     u21:
   723     073D  2F38               	goto	l20
   724     073E                     u20:
   725     073E                     l23:
   726     073E  0008               	return
   727     073F                     __end_of_spiReceiveWait:
   728                           
   729                           	psect	text4
   730     075E                     __ptext4:	
   731 ;; *************** function _setup *****************
   732 ;; Defined at:
   733 ;;		line 86 in file "main_master.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0, pclath, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; Hardware stack levels required when called: 1
   754 ;; This function calls:
   755 ;;		_spiInit
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761     075E                     _setup:	
   762                           ;psect for function _setup
   763                           
   764     075E                     l761:	
   765                           ;incstack = 0
   766                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   767                           
   768                           
   769                           ;main_master.c: 87:     ANSEL = 0;
   770     075E  1683               	bsf	3,5	;RP0=1, select bank3
   771     075F  1703               	bsf	3,6	;RP1=1, select bank3
   772     0760  0188               	clrf	8	;volatile
   773                           
   774                           ;main_master.c: 88:     ANSELH = 0;
   775     0761  0189               	clrf	9	;volatile
   776     0762                     l763:
   777                           
   778                           ;main_master.c: 89:     TRISCbits.TRISC2 = 0;
   779     0762  1683               	bsf	3,5	;RP0=1, select bank1
   780     0763  1303               	bcf	3,6	;RP1=0, select bank1
   781     0764  1107               	bcf	7,2	;volatile
   782                           
   783                           ;main_master.c: 91:     TRISA = 0;
   784     0765  0185               	clrf	5	;volatile
   785                           
   786                           ;main_master.c: 92:     PORTA = 0;
   787     0766  1283               	bcf	3,5	;RP0=0, select bank0
   788     0767  1303               	bcf	3,6	;RP1=0, select bank0
   789     0768  0185               	clrf	5	;volatile
   790                           
   791                           ;main_master.c: 93:     TRISB = 0;
   792     0769  1683               	bsf	3,5	;RP0=1, select bank1
   793     076A  1303               	bcf	3,6	;RP1=0, select bank1
   794     076B  0186               	clrf	6	;volatile
   795                           
   796                           ;main_master.c: 94:     TRISD = 0;
   797     076C  0188               	clrf	8	;volatile
   798                           
   799                           ;main_master.c: 95:     PORTB = 0;
   800     076D  1283               	bcf	3,5	;RP0=0, select bank0
   801     076E  1303               	bcf	3,6	;RP1=0, select bank0
   802     076F  0186               	clrf	6	;volatile
   803                           
   804                           ;main_master.c: 96:     PORTD = 0;
   805     0770  0188               	clrf	8	;volatile
   806     0771                     l765:
   807                           
   808                           ;main_master.c: 97:     PORTCbits.RC2 = 1;
   809     0771  1507               	bsf	7,2	;volatile
   810                           
   811                           ;main_master.c: 99:     TRISE = 0;
   812     0772  1683               	bsf	3,5	;RP0=1, select bank1
   813     0773  1303               	bcf	3,6	;RP1=0, select bank1
   814     0774  0189               	clrf	9	;volatile
   815                           
   816                           ;main_master.c: 100:     PORTE = 0;
   817     0775  1283               	bcf	3,5	;RP0=0, select bank0
   818     0776  1303               	bcf	3,6	;RP1=0, select bank0
   819     0777  0189               	clrf	9	;volatile
   820     0778                     l767:
   821                           
   822                           ;main_master.c: 102:     PORTEbits.RE0 = 1;
   823     0778  1409               	bsf	9,0	;volatile
   824     0779                     l769:
   825                           
   826                           ;main_master.c: 103:     PORTEbits.RE1 = 1;
   827     0779  1489               	bsf	9,1	;volatile
   828     077A                     l771:
   829                           
   830                           ;main_master.c: 104:     PORTEbits.RE2 = 1;
   831     077A  1509               	bsf	9,2	;volatile
   832     077B                     l773:
   833                           
   834                           ;main_master.c: 106:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
   835     077B  01F0               	clrf	spiInit@sDataSample
   836     077C  01F1               	clrf	spiInit@sClockIdle
   837     077D  01F2               	clrf	spiInit@sTransmitEdge
   838     077E  3020               	movlw	32
   839     077F  120A  118A  2748  120A  118A  	fcall	_spiInit
   840     0784                     l81:
   841     0784  0008               	return
   842     0785                     __end_of_setup:
   843                           
   844                           	psect	text5
   845     0748                     __ptext5:	
   846 ;; *************** function _spiInit *****************
   847 ;; Defined at:
   848 ;;		line 12 in file "SPI.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  sType           1    wreg     enum E1292
   851 ;;  sDataSample     1    0[COMMON] enum E1300
   852 ;;  sClockIdle      1    1[COMMON] enum E1304
   853 ;;  sTransmitEdg    1    2[COMMON] enum E1308
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  sType           1    3[COMMON] enum E1292
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         3       0       0       0       0
   866 ;;      Locals:         1       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0
   868 ;;      Totals:         4       0       0       0       0
   869 ;;Total ram usage:        4 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_setup
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878     0748                     _spiInit:	
   879                           ;psect for function _spiInit
   880                           
   881                           
   882                           ;incstack = 0
   883                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   884                           ;spiInit@sType stored from wreg
   885     0748  00F3               	movwf	spiInit@sType
   886     0749                     l751:
   887                           
   888                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   889     0749  1683               	bsf	3,5	;RP0=1, select bank1
   890     074A  1303               	bcf	3,6	;RP1=0, select bank1
   891     074B  1287               	bcf	7,5	;volatile
   892                           
   893                           ;SPI.c: 15:     if(sType & 0b00000100)
   894     074C  1D73               	btfss	spiInit@sType,2
   895     074D  2F4F               	goto	u31
   896     074E  2F50               	goto	u30
   897     074F                     u31:
   898     074F  2F54               	goto	l757
   899     0750                     u30:
   900     0750                     l753:
   901                           
   902                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   903     0750  0872               	movf	spiInit@sTransmitEdge,w
   904     0751  0094               	movwf	20	;volatile
   905     0752                     l755:
   906                           
   907                           ;SPI.c: 18:         TRISC3 = 1;
   908     0752  1587               	bsf	7,3	;volatile
   909                           
   910                           ;SPI.c: 19:     }
   911     0753  2F58               	goto	l16
   912     0754                     l757:
   913                           
   914                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   915     0754  0870               	movf	spiInit@sDataSample,w
   916     0755  0472               	iorwf	spiInit@sTransmitEdge,w
   917     0756  0094               	movwf	20	;volatile
   918     0757                     l759:
   919                           
   920                           ;SPI.c: 23:         TRISC3 = 0;
   921     0757  1187               	bcf	7,3	;volatile
   922     0758                     l16:	
   923                           ;SPI.c: 24:     }
   924                           
   925                           
   926                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   927     0758  0873               	movf	spiInit@sType,w
   928     0759  0471               	iorwf	spiInit@sClockIdle,w
   929     075A  1283               	bcf	3,5	;RP0=0, select bank0
   930     075B  1303               	bcf	3,6	;RP1=0, select bank0
   931     075C  0094               	movwf	20	;volatile
   932     075D                     l17:
   933     075D  0008               	return
   934     075E                     __end_of_spiInit:
   935     007E                     btemp	set	126	;btemp
   936     007E                     wtemp0	set	126
   937                           
   938                           	psect	idloc
   939                           
   940                           ;Config register IDLOC0 @ 0x2000
   941                           ;	unspecified, using default values
   942     2000                     	org	8192
   943     2000  3FFF               	dw	16383
   944                           
   945                           ;Config register IDLOC1 @ 0x2001
   946                           ;	unspecified, using default values
   947     2001                     	org	8193
   948     2001  3FFF               	dw	16383
   949                           
   950                           ;Config register IDLOC2 @ 0x2002
   951                           ;	unspecified, using default values
   952     2002                     	org	8194
   953     2002  3FFF               	dw	16383
   954                           
   955                           ;Config register IDLOC3 @ 0x2003
   956                           ;	unspecified, using default values
   957     2003                     	org	8195
   958     2003  3FFF               	dw	16383
   959                           
   960                           	psect	config
   961                           
   962                           ;Config register CONFIG1 @ 0x2007
   963                           ;	Oscillator Selection bits
   964                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   965                           ;	Watchdog Timer Enable bit
   966                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   967                           ;	Power-up Timer Enable bit
   968                           ;	PWRTE = OFF, PWRT disabled
   969                           ;	RE3/MCLR pin function select bit
   970                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   971                           ;	Code Protection bit
   972                           ;	CP = OFF, Program memory code protection is disabled
   973                           ;	Data Code Protection bit
   974                           ;	CPD = OFF, Data memory code protection is disabled
   975                           ;	Brown Out Reset Selection bits
   976                           ;	BOREN = OFF, BOR disabled
   977                           ;	Internal External Switchover bit
   978                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   979                           ;	Fail-Safe Clock Monitor Enabled bit
   980                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   981                           ;	Low Voltage Programming Enable bit
   982                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   983                           ;	In-Circuit Debugger Mode bit
   984                           ;	DEBUG = 0x1, unprogrammed default
   985     2007                     	org	8199
   986     2007  20D6               	dw	8406
   987                           
   988                           ;Config register CONFIG2 @ 0x2008
   989                           ;	Brown-out Reset Selection bit
   990                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   991                           ;	Flash Program Memory Self Write Enable bits
   992                           ;	WRT = OFF, Write protection off
   993     2008                     	org	8200
   994     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     375
                                              4 COMMON     2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 23 21:13:14 2023

            _SSPSTATbits 0094                       l20 0738                       l23 073E  
                     l16 0758                       l17 075D                       l34 0747  
                     l26 0737                       l81 0784                       u20 073E  
                     u21 073D                       u30 0750                       u31 074F  
                     u47 0791                       u57 07A8                       u67 07B5  
                     u77 07CC                       u87 07D9                       u97 07F0  
                    l801 07D4                      l811 07F5                      l803 07D5  
                    l805 07DE                      l751 0749                      l807 07E4  
                    l753 0750                      l761 075E                      l809 07EC  
                    l755 0752                      l771 077A                      l763 0762  
                    l683 0738                      l757 0754                      l773 077B  
                    l765 0771                      l685 0733                      l781 0796  
                    l759 0757                      l767 0778                      l687 073F  
                    l791 07B1                      l783 079C                      l775 0785  
                    l769 0779                      l689 0744                      l793 07BA  
                    l785 07A4                      l777 078A                      l795 07C0  
                    l787 07AD                      l779 078D                      l797 07C8  
                    l789 07B0                      l799 07D1                     _main 0785  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _setup 075E          __end_of_spiInit 075E          __end_of_spiRead 0748  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_spiWrite 0738  
              ??_spiInit 0073                ??_spiRead 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 0785                  ??_setup 0074  
             __pmaintext 0785                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0732                  __ptext2 073F                  __ptext3 0738  
                __ptext4 075E                  __ptext5 0748                  _spiInit 0748  
                _spiRead 073F     end_of_initialization 07FC               ??_spiWrite 0070  
              _PORTCbits 0007                _PORTEbits 0009                _TRISCbits 0087  
            spiWrite@dat 0070           _spiReceiveWait 0738      start_initialization 07FC  
 __end_of_spiReceiveWait 073F                ___latbits 0002          ?_spiReceiveWait 0070  
               ?_spiInit 0070                 ?_spiRead 0070     spiInit@sTransmitEdge 0072  
     spiInit@sDataSample 0070                 _spiWrite 0732             spiInit@sType 0073  
      spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
