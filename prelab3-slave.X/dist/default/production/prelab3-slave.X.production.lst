

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 23 17:51:51 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Version 2.40
    23                           ; Generated 04/07/2022 GMT
    24                           ; 
    25                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     008F                     	;# 
   102     0090                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009A                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     0105                     	;# 
   121     0107                     	;# 
   122     0108                     	;# 
   123     0109                     	;# 
   124     010C                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0185                     	;# 
   130     0187                     	;# 
   131     0188                     	;# 
   132     0189                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     008F                     	;# 
   180     0090                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0097                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009A                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     0105                     	;# 
   199     0107                     	;# 
   200     0108                     	;# 
   201     0109                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     0185                     	;# 
   208     0187                     	;# 
   209     0188                     	;# 
   210     0189                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     0000                     	;# 
   214     0001                     	;# 
   215     0002                     	;# 
   216     0003                     	;# 
   217     0004                     	;# 
   218     0005                     	;# 
   219     0006                     	;# 
   220     0007                     	;# 
   221     0008                     	;# 
   222     0009                     	;# 
   223     000A                     	;# 
   224     000B                     	;# 
   225     000C                     	;# 
   226     000D                     	;# 
   227     000E                     	;# 
   228     000E                     	;# 
   229     000F                     	;# 
   230     0010                     	;# 
   231     0011                     	;# 
   232     0012                     	;# 
   233     0013                     	;# 
   234     0014                     	;# 
   235     0015                     	;# 
   236     0015                     	;# 
   237     0016                     	;# 
   238     0017                     	;# 
   239     0018                     	;# 
   240     0019                     	;# 
   241     001A                     	;# 
   242     001B                     	;# 
   243     001B                     	;# 
   244     001C                     	;# 
   245     001D                     	;# 
   246     001E                     	;# 
   247     001F                     	;# 
   248     0081                     	;# 
   249     0085                     	;# 
   250     0086                     	;# 
   251     0087                     	;# 
   252     0088                     	;# 
   253     0089                     	;# 
   254     008C                     	;# 
   255     008D                     	;# 
   256     008E                     	;# 
   257     008F                     	;# 
   258     0090                     	;# 
   259     0091                     	;# 
   260     0092                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0094                     	;# 
   265     0095                     	;# 
   266     0096                     	;# 
   267     0097                     	;# 
   268     0098                     	;# 
   269     0099                     	;# 
   270     009A                     	;# 
   271     009B                     	;# 
   272     009C                     	;# 
   273     009D                     	;# 
   274     009E                     	;# 
   275     009F                     	;# 
   276     0105                     	;# 
   277     0107                     	;# 
   278     0108                     	;# 
   279     0109                     	;# 
   280     010C                     	;# 
   281     010C                     	;# 
   282     010D                     	;# 
   283     010E                     	;# 
   284     010F                     	;# 
   285     0185                     	;# 
   286     0187                     	;# 
   287     0188                     	;# 
   288     0189                     	;# 
   289     018C                     	;# 
   290     018D                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     000E                     	;# 
   307     000F                     	;# 
   308     0010                     	;# 
   309     0011                     	;# 
   310     0012                     	;# 
   311     0013                     	;# 
   312     0014                     	;# 
   313     0015                     	;# 
   314     0015                     	;# 
   315     0016                     	;# 
   316     0017                     	;# 
   317     0018                     	;# 
   318     0019                     	;# 
   319     001A                     	;# 
   320     001B                     	;# 
   321     001B                     	;# 
   322     001C                     	;# 
   323     001D                     	;# 
   324     001E                     	;# 
   325     001F                     	;# 
   326     0081                     	;# 
   327     0085                     	;# 
   328     0086                     	;# 
   329     0087                     	;# 
   330     0088                     	;# 
   331     0089                     	;# 
   332     008C                     	;# 
   333     008D                     	;# 
   334     008E                     	;# 
   335     008F                     	;# 
   336     0090                     	;# 
   337     0091                     	;# 
   338     0092                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0093                     	;# 
   342     0094                     	;# 
   343     0095                     	;# 
   344     0096                     	;# 
   345     0097                     	;# 
   346     0098                     	;# 
   347     0099                     	;# 
   348     009A                     	;# 
   349     009B                     	;# 
   350     009C                     	;# 
   351     009D                     	;# 
   352     009E                     	;# 
   353     009F                     	;# 
   354     0105                     	;# 
   355     0107                     	;# 
   356     0108                     	;# 
   357     0109                     	;# 
   358     010C                     	;# 
   359     010C                     	;# 
   360     010D                     	;# 
   361     010E                     	;# 
   362     010F                     	;# 
   363     0185                     	;# 
   364     0187                     	;# 
   365     0188                     	;# 
   366     0189                     	;# 
   367     018C                     	;# 
   368     018D                     	;# 
   369     0008                     _PORTD	set	8
   370     0006                     _PORTB	set	6
   371     001E                     _ADRESH	set	30
   372     000C                     _PIR1bits	set	12
   373     001F                     _ADCON0bits	set	31
   374     000B                     _INTCONbits	set	11
   375     0013                     _SSPBUF	set	19
   376     0014                     _SSPCON	set	20
   377     0063                     _SSPIF	set	99
   378     0089                     _TRISE	set	137
   379     0088                     _TRISD	set	136
   380     0086                     _TRISB	set	134
   381     0086                     _TRISBbits	set	134
   382     0089                     _TRISEbits	set	137
   383     0085                     _TRISAbits	set	133
   384     009F                     _ADCON1bits	set	159
   385     008C                     _PIE1bits	set	140
   386     0094                     _SSPSTATbits	set	148
   387     0094                     _SSPSTAT	set	148
   388     043B                     _TRISC3	set	1083
   389     043D                     _TRISC5	set	1085
   390     0189                     _ANSELHbits	set	393
   391     0188                     _ANSELbits	set	392
   392     0189                     _ANSELH	set	393
   393     0188                     _ANSEL	set	392
   394                           
   395                           	psect	cinit
   396     000F                     start_initialization:	
   397                           ; #config settings
   398                           
   399     000F                     __initialization:
   400                           
   401                           ; Clear objects allocated to COMMON
   402     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   403     0010                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406     0010                     __end_of__initialization:
   407     0010  0183               	clrf	3
   408     0011  120A  118A  290D   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411     0079                     __pbssCOMMON:
   412     0079                     _temporal:
   413     0079                     	ds	1
   414                           
   415                           	psect	cstackCOMMON
   416     0070                     __pcstackCOMMON:
   417     0070                     ?_setup:
   418     0070                     ?_spiWrite:	
   419                           ; 1 bytes @ 0x0
   420                           
   421     0070                     ??_spiWrite:	
   422                           ; 1 bytes @ 0x0
   423                           
   424     0070                     ?_adc_setup:	
   425                           ; 1 bytes @ 0x0
   426                           
   427     0070                     ?_adc_read:	
   428                           ; 1 bytes @ 0x0
   429                           
   430     0070                     ?_adc_output:	
   431                           ; 1 bytes @ 0x0
   432                           
   433     0070                     ?_adc_RO:	
   434                           ; 1 bytes @ 0x0
   435                           
   436     0070                     ?_isr:	
   437                           ; 1 bytes @ 0x0
   438                           
   439     0070                     ?_main:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0070                     spiWrite@dat:	
   443                           ; 1 bytes @ 0x0
   444                           
   445                           
   446                           ; 1 bytes @ 0x0
   447     0070                     	ds	1
   448     0071                     ??_isr:
   449                           
   450                           ; 1 bytes @ 0x1
   451     0071                     	ds	2
   452     0073                     ?_spiInit:
   453     0073                     ??_adc_setup:	
   454                           ; 1 bytes @ 0x3
   455                           
   456     0073                     ?_adc_channel:	
   457                           ; 1 bytes @ 0x3
   458                           
   459     0073                     ??_adc_read:	
   460                           ; 1 bytes @ 0x3
   461                           
   462     0073                     ??_adc_output:	
   463                           ; 1 bytes @ 0x3
   464                           
   465     0073                     spiInit@sDataSample:	
   466                           ; 1 bytes @ 0x3
   467                           
   468     0073                     adc_channel@channel:	
   469                           ; 1 bytes @ 0x3
   470                           
   471                           
   472                           ; 2 bytes @ 0x3
   473     0073                     	ds	1
   474     0074                     spiInit@sClockIdle:
   475     0074                     adc_setup@inter:	
   476                           ; 1 bytes @ 0x4
   477                           
   478     0074                     adc_read@channel:	
   479                           ; 1 bytes @ 0x4
   480                           
   481                           
   482                           ; 1 bytes @ 0x4
   483     0074                     	ds	1
   484     0075                     ??_adc_channel:
   485     0075                     ??_adc_RO:	
   486                           ; 1 bytes @ 0x5
   487                           
   488     0075                     spiInit@sTransmitEdge:	
   489                           ; 1 bytes @ 0x5
   490                           
   491                           
   492                           ; 1 bytes @ 0x5
   493     0075                     	ds	1
   494     0076                     ??_spiInit:
   495     0076                     spiInit@sType:	
   496                           ; 1 bytes @ 0x6
   497                           
   498     0076                     adc_RO@channel:	
   499                           ; 1 bytes @ 0x6
   500                           
   501                           
   502                           ; 1 bytes @ 0x6
   503     0076                     	ds	1
   504     0077                     ??_setup:
   505                           
   506                           ; 1 bytes @ 0x7
   507     0077                     	ds	1
   508     0078                     ??_main:
   509                           
   510                           ; 1 bytes @ 0x8
   511     0078                     	ds	1
   512                           
   513                           	psect	maintext
   514     010D                     __pmaintext:	
   515 ;;
   516 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   517 ;;
   518 ;; *************** function _main *****************
   519 ;; Defined at:
   520 ;;		line 50 in file "main_slave.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : B00/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0
   536 ;;      Temps:          1       0       0       0       0
   537 ;;      Totals:         1       0       0       0       0
   538 ;;Total ram usage:        1 bytes
   539 ;; Hardware stack levels required when called: 4
   540 ;; This function calls:
   541 ;;		_adc_RO
   542 ;;		_setup
   543 ;; This function is called by:
   544 ;;		Startup code after reset
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548     010D                     _main:	
   549                           ;psect for function _main
   550                           
   551     010D                     l936:	
   552                           ;incstack = 0
   553                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   554                           
   555                           
   556                           ;main_slave.c: 51:     setup();
   557     010D  120A  118A  20A9  120A  118A  	fcall	_setup
   558     0112                     l938:
   559                           
   560                           ;main_slave.c: 56:         PORTB = adc_RO(5);
   561     0112  3005               	movlw	5
   562     0113  120A  118A  2150  120A  118A  	fcall	_adc_RO
   563     0118  1283               	bcf	3,5	;RP0=0, select bank0
   564     0119  1303               	bcf	3,6	;RP1=0, select bank0
   565     011A  0086               	movwf	6	;volatile
   566     011B                     l940:
   567                           
   568                           ;main_slave.c: 57:         _delay((unsigned long)((100)*(8000000/4000000.0)));
   569     011B  3042               	movlw	66
   570     011C  00F8               	movwf	??_main
   571     011D                     u77:
   572     011D  0BF8               	decfsz	??_main,f
   573     011E  291D               	goto	u77
   574     011F  0000               	nop
   575     0120  2912               	goto	l938
   576     0121  120A  118A  280C   	ljmp	start
   577     0124                     __end_of_main:
   578                           
   579                           	psect	text1
   580     00A9                     __ptext1:	
   581 ;; *************** function _setup *****************
   582 ;; Defined at:
   583 ;;		line 64 in file "main_slave.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   597 ;;      Params:         0       0       0       0       0
   598 ;;      Locals:         0       0       0       0       0
   599 ;;      Temps:          1       0       0       0       0
   600 ;;      Totals:         1       0       0       0       0
   601 ;;Total ram usage:        1 bytes
   602 ;; Hardware stack levels used: 1
   603 ;; Hardware stack levels required when called: 3
   604 ;; This function calls:
   605 ;;		_adc_channel
   606 ;;		_adc_setup
   607 ;;		_spiInit
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613     00A9                     _setup:	
   614                           ;psect for function _setup
   615                           
   616     00A9                     l912:	
   617                           ;incstack = 0
   618                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   619                           
   620                           
   621                           ;main_slave.c: 65:     ANSEL = 0;
   622     00A9  1683               	bsf	3,5	;RP0=1, select bank3
   623     00AA  1703               	bsf	3,6	;RP1=1, select bank3
   624     00AB  0188               	clrf	8	;volatile
   625                           
   626                           ;main_slave.c: 66:     ANSELH = 0;
   627     00AC  0189               	clrf	9	;volatile
   628                           
   629                           ;main_slave.c: 68:     TRISB = 0;
   630     00AD  1683               	bsf	3,5	;RP0=1, select bank1
   631     00AE  1303               	bcf	3,6	;RP1=0, select bank1
   632     00AF  0186               	clrf	6	;volatile
   633                           
   634                           ;main_slave.c: 69:     TRISD = 0;
   635     00B0  0188               	clrf	8	;volatile
   636                           
   637                           ;main_slave.c: 71:     PORTB = 0;
   638     00B1  1283               	bcf	3,5	;RP0=0, select bank0
   639     00B2  1303               	bcf	3,6	;RP1=0, select bank0
   640     00B3  0186               	clrf	6	;volatile
   641                           
   642                           ;main_slave.c: 72:     PORTD = 0;
   643     00B4  0188               	clrf	8	;volatile
   644     00B5                     l914:
   645                           
   646                           ;main_slave.c: 74:     INTCONbits.GIE = 1;
   647     00B5  178B               	bsf	11,7	;volatile
   648     00B6                     l916:
   649                           
   650                           ;main_slave.c: 75:     INTCONbits.PEIE = 1;
   651     00B6  170B               	bsf	11,6	;volatile
   652     00B7                     l918:
   653                           
   654                           ;main_slave.c: 76:     PIR1bits.SSPIF = 0;
   655     00B7  118C               	bcf	12,3	;volatile
   656     00B8                     l920:
   657                           
   658                           ;main_slave.c: 77:     PIE1bits.SSPIE = 1;
   659     00B8  1683               	bsf	3,5	;RP0=1, select bank1
   660     00B9  1303               	bcf	3,6	;RP1=0, select bank1
   661     00BA  158C               	bsf	12,3	;volatile
   662     00BB                     l922:
   663                           
   664                           ;main_slave.c: 78:     TRISAbits.TRISA5 = 1;
   665     00BB  1685               	bsf	5,5	;volatile
   666     00BC                     l924:
   667                           
   668                           ;main_slave.c: 79:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   669     00BC  01F3               	clrf	spiInit@sDataSample
   670     00BD  01F4               	clrf	spiInit@sClockIdle
   671     00BE  01F5               	clrf	spiInit@sTransmitEdge
   672     00BF  3024               	movlw	36
   673     00C0  120A  118A  2124  120A  118A  	fcall	_spiInit
   674     00C5                     l926:
   675                           
   676                           ;main_slave.c: 81:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   677     00C5  3042               	movlw	66
   678     00C6  00F7               	movwf	??_setup
   679     00C7                     u87:
   680     00C7  0BF7               	decfsz	??_setup,f
   681     00C8  28C7               	goto	u87
   682     00C9  0000               	nop
   683     00CA                     l928:
   684                           
   685                           ;main_slave.c: 82:     adc_setup(0);
   686     00CA  3000               	movlw	0
   687     00CB  120A  118A  20E3  120A  118A  	fcall	_adc_setup
   688     00D0                     l930:
   689                           
   690                           ;main_slave.c: 83:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   691     00D0  3042               	movlw	66
   692     00D1  00F7               	movwf	??_setup
   693     00D2                     u97:
   694     00D2  0BF7               	decfsz	??_setup,f
   695     00D3  28D2               	goto	u97
   696     00D4  0000               	nop
   697     00D5                     l932:
   698                           
   699                           ;main_slave.c: 84:     TRISE = 1;
   700     00D5  3001               	movlw	1
   701     00D6  1683               	bsf	3,5	;RP0=1, select bank1
   702     00D7  1303               	bcf	3,6	;RP1=0, select bank1
   703     00D8  0089               	movwf	9	;volatile
   704     00D9                     l934:
   705                           
   706                           ;main_slave.c: 85:     adc_channel(5);
   707     00D9  3005               	movlw	5
   708     00DA  00F3               	movwf	adc_channel@channel
   709     00DB  3000               	movlw	0
   710     00DC  00F4               	movwf	adc_channel@channel+1
   711     00DD  120A  118A  2014  120A  118A  	fcall	_adc_channel
   712     00E2                     l160:
   713     00E2  0008               	return
   714     00E3                     __end_of_setup:
   715                           
   716                           	psect	text2
   717     0124                     __ptext2:	
   718 ;; *************** function _spiInit *****************
   719 ;; Defined at:
   720 ;;		line 12 in file "SPI.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  sType           1    wreg     enum E1292
   723 ;;  sDataSample     1    3[COMMON] enum E1300
   724 ;;  sClockIdle      1    4[COMMON] enum E1304
   725 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  sType           1    6[COMMON] enum E1292
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         3       0       0       0       0
   738 ;;      Locals:         1       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0
   740 ;;      Totals:         4       0       0       0       0
   741 ;;Total ram usage:        4 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 2
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_setup
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751     0124                     _spiInit:	
   752                           ;psect for function _spiInit
   753                           
   754                           
   755                           ;incstack = 0
   756                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   757                           ;spiInit@sType stored from wreg
   758     0124  00F6               	movwf	spiInit@sType
   759     0125                     l892:
   760                           
   761                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   762     0125  1683               	bsf	3,5	;RP0=1, select bank1
   763     0126  1303               	bcf	3,6	;RP1=0, select bank1
   764     0127  1287               	bcf	7,5	;volatile
   765                           
   766                           ;SPI.c: 15:     if(sType & 0b00000100)
   767     0128  1D76               	btfss	spiInit@sType,2
   768     0129  292B               	goto	u61
   769     012A  292C               	goto	u60
   770     012B                     u61:
   771     012B  2930               	goto	l898
   772     012C                     u60:
   773     012C                     l894:
   774                           
   775                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   776     012C  0875               	movf	spiInit@sTransmitEdge,w
   777     012D  0094               	movwf	20	;volatile
   778     012E                     l896:
   779                           
   780                           ;SPI.c: 18:         TRISC3 = 1;
   781     012E  1587               	bsf	7,3	;volatile
   782                           
   783                           ;SPI.c: 19:     }
   784     012F  2934               	goto	l16
   785     0130                     l898:
   786                           
   787                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   788     0130  0873               	movf	spiInit@sDataSample,w
   789     0131  0475               	iorwf	spiInit@sTransmitEdge,w
   790     0132  0094               	movwf	20	;volatile
   791     0133                     l900:
   792                           
   793                           ;SPI.c: 23:         TRISC3 = 0;
   794     0133  1187               	bcf	7,3	;volatile
   795     0134                     l16:	
   796                           ;SPI.c: 24:     }
   797                           
   798                           
   799                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   800     0134  0876               	movf	spiInit@sType,w
   801     0135  0474               	iorwf	spiInit@sClockIdle,w
   802     0136  1283               	bcf	3,5	;RP0=0, select bank0
   803     0137  1303               	bcf	3,6	;RP1=0, select bank0
   804     0138  0094               	movwf	20	;volatile
   805     0139                     l17:
   806     0139  0008               	return
   807     013A                     __end_of_spiInit:
   808                           
   809                           	psect	text3
   810     00E3                     __ptext3:	
   811 ;; *************** function _adc_setup *****************
   812 ;; Defined at:
   813 ;;		line 16 in file "adc.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  inter           1    wreg     _Bool 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  inter           1    4[COMMON] _Bool 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         0       0       0       0       0
   828 ;;      Locals:         1       0       0       0       0
   829 ;;      Temps:          1       0       0       0       0
   830 ;;      Totals:         2       0       0       0       0
   831 ;;Total ram usage:        2 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 2
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_setup
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841     00E3                     _adc_setup:	
   842                           ;psect for function _adc_setup
   843                           
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in _adc_setup: [wreg+status,2+status,0]
   847                           ;adc_setup@inter stored from wreg
   848     00E3  00F4               	movwf	adc_setup@inter
   849     00E4                     l762:
   850                           
   851                           ;adc.c: 17:     if (inter == 1) {
   852     00E4  0374               	decf	adc_setup@inter,w
   853     00E5  1D03               	btfss	3,2
   854     00E6  28E8               	goto	u21
   855     00E7  28E9               	goto	u20
   856     00E8                     u21:
   857     00E8  28EF               	goto	l65
   858     00E9                     u20:
   859     00E9                     l764:
   860                           
   861                           ;adc.c: 18:     INTCONbits.GIE = 1;
   862     00E9  178B               	bsf	11,7	;volatile
   863                           
   864                           ;adc.c: 19:     INTCONbits.PEIE = 1;
   865     00EA  170B               	bsf	11,6	;volatile
   866                           
   867                           ;adc.c: 20:     PIE1bits.ADIE = 0;}
   868     00EB  1683               	bsf	3,5	;RP0=1, select bank1
   869     00EC  1303               	bcf	3,6	;RP1=0, select bank1
   870     00ED  130C               	bcf	12,6	;volatile
   871     00EE  28F2               	goto	l66
   872     00EF                     l65:	
   873                           ;adc.c: 21:     else {
   874                           
   875                           
   876                           ;adc.c: 22:     PIE1bits.ADIE = 0;}
   877     00EF  1683               	bsf	3,5	;RP0=1, select bank1
   878     00F0  1303               	bcf	3,6	;RP1=0, select bank1
   879     00F1  130C               	bcf	12,6	;volatile
   880     00F2                     l66:
   881                           
   882                           ;adc.c: 24:     ADCON1bits.ADFM = 0;
   883     00F2  139F               	bcf	31,7	;volatile
   884                           
   885                           ;adc.c: 25:     ADCON1bits.VCFG0 = 0;
   886     00F3  121F               	bcf	31,4	;volatile
   887                           
   888                           ;adc.c: 26:     ADCON1bits.VCFG1 = 0;
   889     00F4  129F               	bcf	31,5	;volatile
   890     00F5                     l766:
   891                           
   892                           ;adc.c: 28:     ANSEL = 0x00;
   893     00F5  1683               	bsf	3,5	;RP0=1, select bank3
   894     00F6  1703               	bsf	3,6	;RP1=1, select bank3
   895     00F7  0188               	clrf	8	;volatile
   896                           
   897                           ;adc.c: 29:     ANSELH = 0x00;
   898     00F8  0189               	clrf	9	;volatile
   899     00F9                     l768:
   900                           
   901                           ;adc.c: 31:     ADCON0bits.ADCS = 1;
   902     00F9  1283               	bcf	3,5	;RP0=0, select bank0
   903     00FA  1303               	bcf	3,6	;RP1=0, select bank0
   904     00FB  081F               	movf	31,w	;volatile
   905     00FC  393F               	andlw	-193
   906     00FD  3840               	iorlw	64
   907     00FE  009F               	movwf	31	;volatile
   908     00FF                     l770:
   909                           
   910                           ;adc.c: 32:     ADCON0bits.CHS = 0;
   911     00FF  30C3               	movlw	-61
   912     0100  059F               	andwf	31,f	;volatile
   913     0101                     l772:
   914                           
   915                           ;adc.c: 33:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   916     0101  3021               	movlw	33
   917     0102  00F3               	movwf	??_adc_setup
   918     0103                     u107:
   919     0103  0BF3               	decfsz	??_adc_setup,f
   920     0104  2903               	goto	u107
   921     0105                     l774:
   922                           
   923                           ;adc.c: 34:     ADCON0bits.ADON = 1;
   924     0105  1283               	bcf	3,5	;RP0=0, select bank0
   925     0106  1303               	bcf	3,6	;RP1=0, select bank0
   926     0107  141F               	bsf	31,0	;volatile
   927     0108                     l776:
   928                           
   929                           ;adc.c: 35:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   930     0108  3021               	movlw	33
   931     0109  00F3               	movwf	??_adc_setup
   932     010A                     u117:
   933     010A  0BF3               	decfsz	??_adc_setup,f
   934     010B  290A               	goto	u117
   935     010C                     l67:
   936     010C  0008               	return
   937     010D                     __end_of_adc_setup:
   938                           
   939                           	psect	text4
   940     0014                     __ptext4:	
   941 ;; *************** function _adc_channel *****************
   942 ;; Defined at:
   943 ;;		line 41 in file "adc.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  channel         2    3[COMMON] int 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         2       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0
   960 ;;      Totals:         2       0       0       0       0
   961 ;;Total ram usage:        2 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 2
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_setup
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971     0014                     _adc_channel:	
   972                           ;psect for function _adc_channel
   973                           
   974     0014                     l902:	
   975                           ;incstack = 0
   976                           ; Regs used in _adc_channel: [wreg-fsr0h+status,2+status,0]
   977                           
   978                           
   979                           ;adc.c: 42:     switch (channel)
   980     0014  2877               	goto	l906
   981     0015                     l71:	
   982                           ;adc.c: 43:     {case 0:
   983                           
   984                           
   985                           ;adc.c: 44:         ANSELbits.ANS0 = 1;
   986     0015  1683               	bsf	3,5	;RP0=1, select bank3
   987     0016  1703               	bsf	3,6	;RP1=1, select bank3
   988     0017  1408               	bsf	8,0	;volatile
   989                           
   990                           ;adc.c: 45:         TRISAbits.TRISA0 = 1;
   991     0018  1683               	bsf	3,5	;RP0=1, select bank1
   992     0019  1303               	bcf	3,6	;RP1=0, select bank1
   993     001A  1405               	bsf	5,0	;volatile
   994                           
   995                           ;adc.c: 46:         break;
   996     001B  28A8               	goto	l87
   997     001C                     l73:	
   998                           ;adc.c: 47:     case 1:
   999                           
  1000                           
  1001                           ;adc.c: 48:         ANSELbits.ANS1 = 1;
  1002     001C  1683               	bsf	3,5	;RP0=1, select bank3
  1003     001D  1703               	bsf	3,6	;RP1=1, select bank3
  1004     001E  1488               	bsf	8,1	;volatile
  1005                           
  1006                           ;adc.c: 49:         TRISAbits.TRISA1 = 1;
  1007     001F  1683               	bsf	3,5	;RP0=1, select bank1
  1008     0020  1303               	bcf	3,6	;RP1=0, select bank1
  1009     0021  1485               	bsf	5,1	;volatile
  1010                           
  1011                           ;adc.c: 50:         break;
  1012     0022  28A8               	goto	l87
  1013     0023                     l74:	
  1014                           ;adc.c: 51:     case 2:
  1015                           
  1016                           
  1017                           ;adc.c: 52:         ANSELbits.ANS2 = 1;
  1018     0023  1683               	bsf	3,5	;RP0=1, select bank3
  1019     0024  1703               	bsf	3,6	;RP1=1, select bank3
  1020     0025  1508               	bsf	8,2	;volatile
  1021                           
  1022                           ;adc.c: 53:         TRISAbits.TRISA2 = 1;
  1023     0026  1683               	bsf	3,5	;RP0=1, select bank1
  1024     0027  1303               	bcf	3,6	;RP1=0, select bank1
  1025     0028  1505               	bsf	5,2	;volatile
  1026                           
  1027                           ;adc.c: 54:         break;
  1028     0029  28A8               	goto	l87
  1029     002A                     l75:	
  1030                           ;adc.c: 55:     case 3:
  1031                           
  1032                           
  1033                           ;adc.c: 56:         ANSELbits.ANS3 = 1;
  1034     002A  1683               	bsf	3,5	;RP0=1, select bank3
  1035     002B  1703               	bsf	3,6	;RP1=1, select bank3
  1036     002C  1588               	bsf	8,3	;volatile
  1037                           
  1038                           ;adc.c: 57:         TRISAbits.TRISA3 = 1;
  1039     002D  1683               	bsf	3,5	;RP0=1, select bank1
  1040     002E  1303               	bcf	3,6	;RP1=0, select bank1
  1041     002F  1585               	bsf	5,3	;volatile
  1042                           
  1043                           ;adc.c: 58:         break;
  1044     0030  28A8               	goto	l87
  1045     0031                     l76:	
  1046                           ;adc.c: 59:     case 4:
  1047                           
  1048                           
  1049                           ;adc.c: 60:         ANSELbits.ANS4 = 1;
  1050     0031  1683               	bsf	3,5	;RP0=1, select bank3
  1051     0032  1703               	bsf	3,6	;RP1=1, select bank3
  1052     0033  1608               	bsf	8,4	;volatile
  1053                           
  1054                           ;adc.c: 61:         TRISAbits.TRISA5 = 1;
  1055     0034  1683               	bsf	3,5	;RP0=1, select bank1
  1056     0035  1303               	bcf	3,6	;RP1=0, select bank1
  1057     0036  1685               	bsf	5,5	;volatile
  1058                           
  1059                           ;adc.c: 62:         break;
  1060     0037  28A8               	goto	l87
  1061     0038                     l77:	
  1062                           ;adc.c: 63:     case 5:
  1063                           
  1064                           
  1065                           ;adc.c: 64:         ANSELbits.ANS5 = 1;
  1066     0038  1683               	bsf	3,5	;RP0=1, select bank3
  1067     0039  1703               	bsf	3,6	;RP1=1, select bank3
  1068     003A  1688               	bsf	8,5	;volatile
  1069                           
  1070                           ;adc.c: 65:         TRISEbits.TRISE0 = 1;
  1071     003B  1683               	bsf	3,5	;RP0=1, select bank1
  1072     003C  1303               	bcf	3,6	;RP1=0, select bank1
  1073     003D  1409               	bsf	9,0	;volatile
  1074                           
  1075                           ;adc.c: 66:         break;
  1076     003E  28A8               	goto	l87
  1077     003F                     l78:	
  1078                           ;adc.c: 67:     case 6:
  1079                           
  1080                           
  1081                           ;adc.c: 68:         ANSELbits.ANS6 = 1;
  1082     003F  1683               	bsf	3,5	;RP0=1, select bank3
  1083     0040  1703               	bsf	3,6	;RP1=1, select bank3
  1084     0041  1708               	bsf	8,6	;volatile
  1085                           
  1086                           ;adc.c: 69:         TRISEbits.TRISE1 = 1;
  1087     0042  1683               	bsf	3,5	;RP0=1, select bank1
  1088     0043  1303               	bcf	3,6	;RP1=0, select bank1
  1089     0044  1489               	bsf	9,1	;volatile
  1090                           
  1091                           ;adc.c: 70:         break;
  1092     0045  28A8               	goto	l87
  1093     0046                     l79:	
  1094                           ;adc.c: 71:     case 7:
  1095                           
  1096                           
  1097                           ;adc.c: 72:         ANSELbits.ANS7 = 1;
  1098     0046  1683               	bsf	3,5	;RP0=1, select bank3
  1099     0047  1703               	bsf	3,6	;RP1=1, select bank3
  1100     0048  1788               	bsf	8,7	;volatile
  1101                           
  1102                           ;adc.c: 73:         TRISEbits.TRISE2 = 1;
  1103     0049  1683               	bsf	3,5	;RP0=1, select bank1
  1104     004A  1303               	bcf	3,6	;RP1=0, select bank1
  1105     004B  1509               	bsf	9,2	;volatile
  1106                           
  1107                           ;adc.c: 74:         break;
  1108     004C  28A8               	goto	l87
  1109     004D                     l80:	
  1110                           ;adc.c: 75:     case 8:
  1111                           
  1112                           
  1113                           ;adc.c: 76:         ANSELHbits.ANS8 = 1;
  1114     004D  1683               	bsf	3,5	;RP0=1, select bank3
  1115     004E  1703               	bsf	3,6	;RP1=1, select bank3
  1116     004F  1409               	bsf	9,0	;volatile
  1117                           
  1118                           ;adc.c: 77:         TRISBbits.TRISB2 = 1;
  1119     0050  1683               	bsf	3,5	;RP0=1, select bank1
  1120     0051  1303               	bcf	3,6	;RP1=0, select bank1
  1121     0052  1506               	bsf	6,2	;volatile
  1122                           
  1123                           ;adc.c: 78:         break;
  1124     0053  28A8               	goto	l87
  1125     0054                     l81:	
  1126                           ;adc.c: 79:     case 9:
  1127                           
  1128                           
  1129                           ;adc.c: 80:         ANSELHbits.ANS9 = 1;
  1130     0054  1683               	bsf	3,5	;RP0=1, select bank3
  1131     0055  1703               	bsf	3,6	;RP1=1, select bank3
  1132     0056  1489               	bsf	9,1	;volatile
  1133                           
  1134                           ;adc.c: 81:         TRISBbits.TRISB3 = 1;
  1135     0057  1683               	bsf	3,5	;RP0=1, select bank1
  1136     0058  1303               	bcf	3,6	;RP1=0, select bank1
  1137     0059  1586               	bsf	6,3	;volatile
  1138                           
  1139                           ;adc.c: 82:         break;
  1140     005A  28A8               	goto	l87
  1141     005B                     l82:	
  1142                           ;adc.c: 83:     case 10:
  1143                           
  1144                           
  1145                           ;adc.c: 84:         ANSELHbits.ANS10 = 1;
  1146     005B  1683               	bsf	3,5	;RP0=1, select bank3
  1147     005C  1703               	bsf	3,6	;RP1=1, select bank3
  1148     005D  1509               	bsf	9,2	;volatile
  1149                           
  1150                           ;adc.c: 85:         TRISBbits.TRISB1 = 1;
  1151     005E  1683               	bsf	3,5	;RP0=1, select bank1
  1152     005F  1303               	bcf	3,6	;RP1=0, select bank1
  1153     0060  1486               	bsf	6,1	;volatile
  1154                           
  1155                           ;adc.c: 86:         break;
  1156     0061  28A8               	goto	l87
  1157     0062                     l83:	
  1158                           ;adc.c: 87:     case 11:
  1159                           
  1160                           
  1161                           ;adc.c: 88:         ANSELHbits.ANS11 = 1;
  1162     0062  1683               	bsf	3,5	;RP0=1, select bank3
  1163     0063  1703               	bsf	3,6	;RP1=1, select bank3
  1164     0064  1589               	bsf	9,3	;volatile
  1165                           
  1166                           ;adc.c: 89:         TRISBbits.TRISB4 = 1;
  1167     0065  1683               	bsf	3,5	;RP0=1, select bank1
  1168     0066  1303               	bcf	3,6	;RP1=0, select bank1
  1169     0067  1606               	bsf	6,4	;volatile
  1170                           
  1171                           ;adc.c: 90:         break;
  1172     0068  28A8               	goto	l87
  1173     0069                     l84:	
  1174                           ;adc.c: 91:     case 12:
  1175                           
  1176                           
  1177                           ;adc.c: 92:         ANSELHbits.ANS12 = 1;
  1178     0069  1683               	bsf	3,5	;RP0=1, select bank3
  1179     006A  1703               	bsf	3,6	;RP1=1, select bank3
  1180     006B  1609               	bsf	9,4	;volatile
  1181                           
  1182                           ;adc.c: 93:         TRISBbits.TRISB0 = 1;
  1183     006C  1683               	bsf	3,5	;RP0=1, select bank1
  1184     006D  1303               	bcf	3,6	;RP1=0, select bank1
  1185     006E  1406               	bsf	6,0	;volatile
  1186                           
  1187                           ;adc.c: 94:         break;
  1188     006F  28A8               	goto	l87
  1189     0070                     l85:	
  1190                           ;adc.c: 95:     case 13:
  1191                           
  1192                           
  1193                           ;adc.c: 96:         ANSELHbits.ANS13 = 1;
  1194     0070  1683               	bsf	3,5	;RP0=1, select bank3
  1195     0071  1703               	bsf	3,6	;RP1=1, select bank3
  1196     0072  1689               	bsf	9,5	;volatile
  1197                           
  1198                           ;adc.c: 97:         TRISBbits.TRISB5 = 1;
  1199     0073  1683               	bsf	3,5	;RP0=1, select bank1
  1200     0074  1303               	bcf	3,6	;RP1=0, select bank1
  1201     0075  1686               	bsf	6,5	;volatile
  1202                           
  1203                           ;adc.c: 98:         break;
  1204     0076  28A8               	goto	l87
  1205     0077                     l906:
  1206                           
  1207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1208                           ; Switch size 1, requested type "simple"
  1209                           ; Number of cases is 1, Range of values is 0 to 0
  1210                           ; switch strategies available:
  1211                           ; Name         Instructions Cycles
  1212                           ; simple_byte            4     3 (average)
  1213                           ; direct_byte           11     8 (fixed)
  1214                           ; jumptable            260     6 (fixed)
  1215                           ;	Chosen strategy is simple_byte
  1216     0077  0874               	movf	adc_channel@channel+1,w
  1217     0078  3A00               	xorlw	0	; case 0
  1218     0079  1903               	skipnz
  1219     007A  287C               	goto	l962
  1220     007B  28A8               	goto	l87
  1221     007C                     l962:
  1222                           
  1223                           ; Switch size 1, requested type "simple"
  1224                           ; Number of cases is 14, Range of values is 0 to 13
  1225                           ; switch strategies available:
  1226                           ; Name         Instructions Cycles
  1227                           ; simple_byte           43    22 (average)
  1228                           ; direct_byte           50     8 (fixed)
  1229                           ; jumptable            260     6 (fixed)
  1230                           ;	Chosen strategy is simple_byte
  1231     007C  0873               	movf	adc_channel@channel,w
  1232     007D  3A00               	xorlw	0	; case 0
  1233     007E  1903               	skipnz
  1234     007F  2815               	goto	l71
  1235     0080  3A01               	xorlw	1	; case 1
  1236     0081  1903               	skipnz
  1237     0082  281C               	goto	l73
  1238     0083  3A03               	xorlw	3	; case 2
  1239     0084  1903               	skipnz
  1240     0085  2823               	goto	l74
  1241     0086  3A01               	xorlw	1	; case 3
  1242     0087  1903               	skipnz
  1243     0088  282A               	goto	l75
  1244     0089  3A07               	xorlw	7	; case 4
  1245     008A  1903               	skipnz
  1246     008B  2831               	goto	l76
  1247     008C  3A01               	xorlw	1	; case 5
  1248     008D  1903               	skipnz
  1249     008E  2838               	goto	l77
  1250     008F  3A03               	xorlw	3	; case 6
  1251     0090  1903               	skipnz
  1252     0091  283F               	goto	l78
  1253     0092  3A01               	xorlw	1	; case 7
  1254     0093  1903               	skipnz
  1255     0094  2846               	goto	l79
  1256     0095  3A0F               	xorlw	15	; case 8
  1257     0096  1903               	skipnz
  1258     0097  284D               	goto	l80
  1259     0098  3A01               	xorlw	1	; case 9
  1260     0099  1903               	skipnz
  1261     009A  2854               	goto	l81
  1262     009B  3A03               	xorlw	3	; case 10
  1263     009C  1903               	skipnz
  1264     009D  285B               	goto	l82
  1265     009E  3A01               	xorlw	1	; case 11
  1266     009F  1903               	skipnz
  1267     00A0  2862               	goto	l83
  1268     00A1  3A07               	xorlw	7	; case 12
  1269     00A2  1903               	skipnz
  1270     00A3  2869               	goto	l84
  1271     00A4  3A01               	xorlw	1	; case 13
  1272     00A5  1903               	skipnz
  1273     00A6  2870               	goto	l85
  1274     00A7  28A8               	goto	l87
  1275     00A8                     l87:
  1276     00A8  0008               	return
  1277     00A9                     __end_of_adc_channel:
  1278                           
  1279                           	psect	text5
  1280     0150                     __ptext5:	
  1281 ;; *************** function _adc_RO *****************
  1282 ;; Defined at:
  1283 ;;		line 119 in file "adc.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  channel         1    wreg     unsigned char 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  channel         1    6[COMMON] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      unsigned char 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0, pclath, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         0       0       0       0       0
  1298 ;;      Locals:         1       0       0       0       0
  1299 ;;      Temps:          1       0       0       0       0
  1300 ;;      Totals:         2       0       0       0       0
  1301 ;;Total ram usage:        2 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 3
  1304 ;; This function calls:
  1305 ;;		_adc_output
  1306 ;;		_adc_read
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;;		_adc_volt
  1310 ;;		_adc_mv
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314     0150                     _adc_RO:	
  1315                           ;psect for function _adc_RO
  1316                           
  1317                           
  1318                           ;incstack = 0
  1319                           ; Regs used in _adc_RO: [wreg+status,2+status,0+pclath+cstack]
  1320                           ;adc_RO@channel stored from wreg
  1321     0150  00F6               	movwf	adc_RO@channel
  1322     0151                     l804:
  1323                           
  1324                           ;adc.c: 120:     adc_read(channel);
  1325     0151  0876               	movf	adc_RO@channel,w
  1326     0152  120A  118A  2162  120A  118A  	fcall	_adc_read
  1327     0157                     l806:
  1328                           
  1329                           ;adc.c: 121:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1330     0157  3010               	movlw	16
  1331     0158  00F5               	movwf	??_adc_RO
  1332     0159                     u127:
  1333     0159  0BF5               	decfsz	??_adc_RO,f
  1334     015A  2959               	goto	u127
  1335     015B  0000               	nop
  1336     015C                     l808:
  1337                           
  1338                           ;adc.c: 122:     return adc_output();
  1339     015C  120A  118A  2170  120A  118A  	fcall	_adc_output
  1340     0161                     l97:
  1341     0161  0008               	return
  1342     0162                     __end_of_adc_RO:
  1343                           
  1344                           	psect	text6
  1345     0162                     __ptext6:	
  1346 ;; *************** function _adc_read *****************
  1347 ;; Defined at:
  1348 ;;		line 105 in file "adc.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  channel         1    wreg     unsigned char 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  channel         1    4[COMMON] unsigned char 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         1       0       0       0       0
  1364 ;;      Temps:          1       0       0       0       0
  1365 ;;      Totals:         2       0       0       0       0
  1366 ;;Total ram usage:        2 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 2
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_adc_RO
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376     0162                     _adc_read:	
  1377                           ;psect for function _adc_read
  1378                           
  1379                           
  1380                           ;incstack = 0
  1381                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  1382                           ;adc_read@channel stored from wreg
  1383     0162  00F4               	movwf	adc_read@channel
  1384     0163                     l788:
  1385                           
  1386                           ;adc.c: 106:     ADCON0bits.CHS = channel;
  1387     0163  0874               	movf	adc_read@channel,w
  1388     0164  00F3               	movwf	??_adc_read
  1389     0165  0DF3               	rlf	??_adc_read,f
  1390     0166  0DF3               	rlf	??_adc_read,f
  1391     0167  1283               	bcf	3,5	;RP0=0, select bank0
  1392     0168  1303               	bcf	3,6	;RP1=0, select bank0
  1393     0169  081F               	movf	31,w	;volatile
  1394     016A  0673               	xorwf	??_adc_read,w
  1395     016B  39C3               	andlw	-61
  1396     016C  0673               	xorwf	??_adc_read,w
  1397     016D  009F               	movwf	31	;volatile
  1398     016E                     l790:
  1399                           
  1400                           ;adc.c: 107:     ADCON0bits.GO = 1;
  1401     016E  149F               	bsf	31,1	;volatile
  1402     016F                     l90:
  1403     016F  0008               	return
  1404     0170                     __end_of_adc_read:
  1405                           
  1406                           	psect	text7
  1407     0170                     __ptext7:	
  1408 ;; *************** function _adc_output *****************
  1409 ;; Defined at:
  1410 ;;		line 112 in file "adc.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      unsigned char 
  1417 ;; Registers used:
  1418 ;;		wreg
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1424 ;;      Params:         0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0
  1427 ;;      Totals:         0       0       0       0       0
  1428 ;;Total ram usage:        0 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; Hardware stack levels required when called: 2
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_adc_RO
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438     0170                     _adc_output:	
  1439                           ;psect for function _adc_output
  1440                           
  1441     0170                     l792:	
  1442                           ;incstack = 0
  1443                           ; Regs used in _adc_output: [wreg]
  1444                           
  1445                           
  1446                           ;adc.c: 113:     if (PIR1bits.ADIF == 1) {
  1447     0170  1283               	bcf	3,5	;RP0=0, select bank0
  1448     0171  1303               	bcf	3,6	;RP1=0, select bank0
  1449     0172  1F0C               	btfss	12,6	;volatile
  1450     0173  2975               	goto	u31
  1451     0174  2976               	goto	u30
  1452     0175                     u31:
  1453     0175  2977               	goto	l796
  1454     0176                     u30:
  1455     0176                     l794:
  1456                           
  1457                           ;adc.c: 114:         PIR1bits.ADIF = 0;
  1458     0176  130C               	bcf	12,6	;volatile
  1459     0177                     l796:
  1460                           
  1461                           ;adc.c: 116:     return ADRESH;
  1462     0177  081E               	movf	30,w	;volatile
  1463     0178                     l94:
  1464     0178  0008               	return
  1465     0179                     __end_of_adc_output:
  1466                           
  1467                           	psect	text8
  1468     013A                     __ptext8:	
  1469 ;; *************** function _isr *****************
  1470 ;; Defined at:
  1471 ;;		line 41 in file "main_slave.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, pclath, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1485 ;;      Params:         0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0
  1487 ;;      Temps:          2       0       0       0       0
  1488 ;;      Totals:         2       0       0       0       0
  1489 ;;Total ram usage:        2 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 1
  1492 ;; This function calls:
  1493 ;;		_spiWrite
  1494 ;; This function is called by:
  1495 ;;		Interrupt level 1
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499     013A                     _isr:	
  1500                           ;psect for function _isr
  1501                           
  1502     013A                     i1l860:
  1503                           
  1504                           ;main_slave.c: 42:    if(SSPIF == 1){
  1505     013A  1283               	bcf	3,5	;RP0=0, select bank0
  1506     013B  1303               	bcf	3,6	;RP1=0, select bank0
  1507     013C  1D8C               	btfss	12,3	;volatile
  1508     013D  293F               	goto	u5_21
  1509     013E  2940               	goto	u5_20
  1510     013F                     u5_21:
  1511     013F  2949               	goto	i1l149
  1512     0140                     u5_20:
  1513     0140                     i1l862:
  1514                           
  1515                           ;main_slave.c: 43:         spiWrite(PORTB);
  1516     0140  0806               	movf	6,w	;volatile
  1517     0141  120A  118A  2179  120A  118A  	fcall	_spiWrite
  1518     0146                     i1l864:
  1519                           
  1520                           ;main_slave.c: 44:         SSPIF = 0;
  1521     0146  1283               	bcf	3,5	;RP0=0, select bank0
  1522     0147  1303               	bcf	3,6	;RP1=0, select bank0
  1523     0148  118C               	bcf	12,3	;volatile
  1524     0149                     i1l149:
  1525     0149  0872               	movf	??_isr+1,w
  1526     014A  008A               	movwf	10
  1527     014B  0E71               	swapf	??_isr,w
  1528     014C  0083               	movwf	3
  1529     014D  0EFE               	swapf	btemp,f
  1530     014E  0E7E               	swapf	btemp,w
  1531     014F  0009               	retfie
  1532     0150                     __end_of_isr:
  1533                           
  1534                           	psect	intentry
  1535     0004                     __pintentry:	
  1536                           ;incstack = 0
  1537                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1538                           
  1539     0004                     interrupt_function:
  1540     007E                     saved_w	set	btemp
  1541     0004  00FE               	movwf	btemp
  1542     0005  0E03               	swapf	3,w
  1543     0006  00F1               	movwf	??_isr
  1544     0007  080A               	movf	10,w
  1545     0008  00F2               	movwf	??_isr+1
  1546     0009  120A  118A  293A   	ljmp	_isr
  1547                           
  1548                           	psect	text9
  1549     0179                     __ptext9:	
  1550 ;; *************** function _spiWrite *****************
  1551 ;; Defined at:
  1552 ;;		line 34 in file "SPI.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  dat             1    wreg     unsigned char 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  dat             1    0[COMMON] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       0       0       0       0
  1567 ;;      Locals:         1       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0
  1569 ;;      Totals:         1       0       0       0       0
  1570 ;;Total ram usage:        1 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_isr
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579     0179                     _spiWrite:	
  1580                           ;psect for function _spiWrite
  1581                           
  1582                           
  1583                           ;incstack = 0
  1584                           ; Regs used in _spiWrite: [wreg]
  1585                           ;spiWrite@dat stored from wreg
  1586     0179  00F0               	movwf	spiWrite@dat
  1587     017A                     i1l802:
  1588                           
  1589                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1590     017A  0870               	movf	spiWrite@dat,w
  1591     017B  1283               	bcf	3,5	;RP0=0, select bank0
  1592     017C  1303               	bcf	3,6	;RP1=0, select bank0
  1593     017D  0093               	movwf	19	;volatile
  1594     017E                     i1l26:
  1595     017E  0008               	return
  1596     017F                     __end_of_spiWrite:
  1597     007E                     btemp	set	126	;btemp
  1598     007E                     wtemp0	set	126
  1599                           
  1600                           	psect	idloc
  1601                           
  1602                           ;Config register IDLOC0 @ 0x2000
  1603                           ;	unspecified, using default values
  1604     2000                     	org	8192
  1605     2000  3FFF               	dw	16383
  1606                           
  1607                           ;Config register IDLOC1 @ 0x2001
  1608                           ;	unspecified, using default values
  1609     2001                     	org	8193
  1610     2001  3FFF               	dw	16383
  1611                           
  1612                           ;Config register IDLOC2 @ 0x2002
  1613                           ;	unspecified, using default values
  1614     2002                     	org	8194
  1615     2002  3FFF               	dw	16383
  1616                           
  1617                           ;Config register IDLOC3 @ 0x2003
  1618                           ;	unspecified, using default values
  1619     2003                     	org	8195
  1620     2003  3FFF               	dw	16383
  1621                           
  1622                           	psect	config
  1623                           
  1624                           ;Config register CONFIG1 @ 0x2007
  1625                           ;	Oscillator Selection bits
  1626                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1627                           ;	Watchdog Timer Enable bit
  1628                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1629                           ;	Power-up Timer Enable bit
  1630                           ;	PWRTE = OFF, PWRT disabled
  1631                           ;	RE3/MCLR pin function select bit
  1632                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1633                           ;	Code Protection bit
  1634                           ;	CP = OFF, Program memory code protection is disabled
  1635                           ;	Data Code Protection bit
  1636                           ;	CPD = OFF, Data memory code protection is disabled
  1637                           ;	Brown Out Reset Selection bits
  1638                           ;	BOREN = OFF, BOR disabled
  1639                           ;	Internal External Switchover bit
  1640                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1641                           ;	Fail-Safe Clock Monitor Enabled bit
  1642                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1643                           ;	Low Voltage Programming Enable bit
  1644                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1645                           ;	In-Circuit Debugger Mode bit
  1646                           ;	DEBUG = 0x1, unprogrammed default
  1647     2007                     	org	8199
  1648     2007  20D6               	dw	8406
  1649                           
  1650                           ;Config register CONFIG2 @ 0x2008
  1651                           ;	Brown-out Reset Selection bit
  1652                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1653                           ;	Flash Program Memory Self Write Enable bits
  1654                           ;	WRT = OFF, Write protection off
  1655     2008                     	org	8200
  1656     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup
    _setup->_spiInit
    _adc_RO->_adc_read

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     503
                                              8 COMMON     1     1      0
                             _adc_RO
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     473
                                              7 COMMON     1     1      0
                        _adc_channel
                          _adc_setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _adc_setup                                            2     2      0      15
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_channel                                          2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_RO                                               2     2      0      30
                                              5 COMMON     2     2      0
                         _adc_output
                           _adc_read
 ---------------------------------------------------------------------------------
 (2) _adc_read                                             2     2      0      15
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_output                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_RO
     _adc_output
     _adc_read
   _setup
     _adc_channel
     _adc_setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 23 17:51:51 2023

            _SSPSTATbits 0094                       l16 0134                       l17 0139  
                     l71 0015                       l80 004D                       l81 0054  
                     l73 001C                       l65 00EF                       l90 016F  
                     l82 005B                       l74 0023                       l66 00F2  
                     l83 0062                       l75 002A                       l67 010C  
                     l84 0069                       l76 0031                       l85 0070  
                     l77 0038                       l94 0178                       l78 003F  
                     l79 0046                       l87 00A8                       l97 0161  
                     u20 00E9                       u21 00E8                       u30 0176  
                     u31 0175                       u60 012C                       u61 012B  
                     u77 011D                       u87 00C7                       u97 00D2  
                    l160 00E2                      l804 0151                      l900 0133  
                    l806 0157                      l902 0014                      l808 015C  
                    l920 00B8                      l912 00A9                      l906 0077  
                    l770 00FF                      l762 00E4                      l930 00D0  
                    l922 00BB                      l914 00B5                      l772 0101  
                    l764 00E9                      l932 00D5                      l924 00BC  
                    l916 00B6                      l940 011B                      l790 016E  
                    l774 0105                      l766 00F5                      l934 00D9  
                    l926 00C5                      l918 00B7                      l792 0170  
                    l776 0108                      l768 00F9                      l928 00CA  
                    l936 010D                      l794 0176                      l962 007C  
                    l938 0112                      l796 0177                      l788 0163  
                    l892 0125                      l894 012C                      l896 012E  
                    l898 0130                      u107 0103                      u117 010A  
                    u127 0159                      _isr 013A                     ?_isr 0070  
                   i1l26 017E                     u5_20 0140                     u5_21 013F  
                   _main 010D                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l149 0149                    i1l802 017A                    i1l860 013A  
                  i1l862 0140                    i1l864 0146                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089                    _SSPIF 0063                    _setup 00A9  
                  pclath 000A          __end_of_spiInit 013A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0124  
                 ??_main 0078                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189         __end_of_adc_read 0170                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 _adc_RO 0150                   saved_w 007E         __end_of_spiWrite 017F  
              ??_spiInit 0076            adc_RO@channel 0076  __end_of__initialization 0010  
         __pcstackCOMMON 0070            __end_of_setup 00E3               _adc_output 0170  
                ??_setup 0077               __pmaintext 010D            ??_adc_channel 0075  
                ?_adc_RO 0070               __pintentry 0004                ?_adc_read 0070  
      __end_of_adc_setup 010D                  _SSPSTAT 0094                ?_spiWrite 0070  
            ?_adc_output 0070                _ANSELbits 0188               ??_adc_read 0073  
                __ptext1 00A9                  __ptext2 0124                  __ptext3 00E3  
                __ptext4 0014                  __ptext5 0150                  __ptext6 0162  
                __ptext7 0170                  __ptext8 013A                  __ptext9 0179  
    __end_of_adc_channel 00A9                  _spiInit 0124     end_of_initialization 0010  
     adc_channel@channel 0073               ??_spiWrite 0070           adc_setup@inter 0074  
              _TRISAbits 0085                _TRISBbits 0086                _TRISEbits 0089  
            spiWrite@dat 0070              _adc_channel 0014           __end_of_adc_RO 0162  
    start_initialization 000F              __end_of_isr 0150                 ??_adc_RO 0075  
            __pbssCOMMON 0079          adc_read@channel 0074                ___latbits 0002  
              _adc_setup 00E3             ??_adc_output 0073                 ?_spiInit 0073  
             ?_adc_setup 0070     spiInit@sTransmitEdge 0075        interrupt_function 0004  
     __end_of_adc_output 0179                 _PIE1bits 008C       spiInit@sDataSample 0073  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
           ?_adc_channel 0073                 _adc_read 0162               _ANSELHbits 0189  
            ??_adc_setup 0073                 _temporal 0079                 _spiWrite 0179  
           spiInit@sType 0076        spiInit@sClockIdle 0074               _INTCONbits 000B  
               intlevel1 0000  
